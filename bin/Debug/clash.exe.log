
--------------------------------------------------
TXLib предупреждает:

Программа: D:\пономарёв александр\clash-main\bin\Debug\clash.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x75B595F8 в функции strchr(). Попытка прочесть данные по адресу 0x00000096 в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005042FC (32-bit), Flags: CMdRe0, Thread: 0x23F8 (Main), GetLastError(): 6 (Неверный дескриптор). 

--------------------------------------------------
Стек вызовов:

# 0 0x75B595F8 in C:\Windows\System32\msvcrt.dll: strchr()

# 1 0x0044B278 in D:\пономарёв александр\clash-main\bin\Debug\clash.exe: DrawButton() at d:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 2 0x0042C1E1 in D:\пономарёв александр\clash-main\bin\Debug\clash.exe: main() at D:/пономарёв александр/clash-main/main.cpp (80):

     78:         for (int i=0; i<4; i++)
     79:         {
=>   80:             btn[i].DrawButton();
     81:         }
     82: 

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::txDrawText(double, double, double, double, const char*, unsigned int, HDC) at d:\codeblocks\mingw\include\txlib.h (13403):

  13401: $   RECT r = { ROUND (x0), ROUND (y0), ROUND (x1), ROUND (y1) };
  13402: 
=>13403: $   if (!strchr (text, '\n')) format |= DT_SINGLELINE;
  13404: 
  13405: $   unsigned prev = txSetTextAlign (TA_LEFT | TA_TOP | TA_NOUPDATECP, dc);

# 1 in void Button::DrawButton() at D:\пономарёв александр\clash-main\main.cpp (17):

     15:         txSetColor(TX_BLACK);
     16:         txSelectFont("Arial", 24);
=>   17:         txDrawText(x, 30, x+150, 70, name);
     18:     }
     19: };

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\codeblocks\mingw\include\txlib.h
Compiled:	Sep 25 2023 19:27:37, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 25 2023 19:27:56

Run file:	D:\пономарёв александр\clash-main\bin\Debug\clash.exe
Directory:	D:\пономарёв александр\clash-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\пономарёв александр\clash-main\bin\Debug\clash.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x75B595F8 в функции strchr(). Попытка прочесть данные по адресу 0x00000096 в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005042FC (32-bit), Flags: CMdRe0, Thread: 0x23F8 (Main), GetLastError(): 6 (Неверный дескриптор). 

--------------------------------------------------
Стек вызовов:

# 0 0x75B595F8 in C:\Windows\System32\msvcrt.dll: strchr()

# 1 0x0044B278 in D:\пономарёв александр\clash-main\bin\Debug\clash.exe: DrawButton() at d:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 2 0x0042C1E1 in D:\пономарёв александр\clash-main\bin\Debug\clash.exe: main() at D:/пономарёв александр/clash-main/main.cpp (80):

     78:         for (int i=0; i<4; i++)
     79:         {
=>   80:             btn[i].DrawButton();
     81:         }
     82: 

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::txDrawText(double, double, double, double, const char*, unsigned int, HDC) at d:\codeblocks\mingw\include\txlib.h (13403):

  13401: $   RECT r = { ROUND (x0), ROUND (y0), ROUND (x1), ROUND (y1) };
  13402: 
=>13403: $   if (!strchr (text, '\n')) format |= DT_SINGLELINE;
  13404: 
  13405: $   unsigned prev = txSetTextAlign (TA_LEFT | TA_TOP | TA_NOUPDATECP, dc);

# 1 in void Button::DrawButton() at D:\пономарёв александр\clash-main\main.cpp (17):

     15:         txSetColor(TX_BLACK);
     16:         txSelectFont("Arial", 24);
=>   17:         txDrawText(x, 30, x+150, 70, name);
     18:     }
     19: };

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\codeblocks\mingw\include\txlib.h
Compiled:	Sep 25 2023 19:27:37, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 25 2023 19:27:56

Run file:	D:\пономарёв александр\clash-main\bin\Debug\clash.exe
Directory:	D:\пономарёв александр\clash-main

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x0042C6AB в функции main() в файле D:/пономарёв александр/clashofclans-main/main.cpp на строке 150. Попытка прочесть данные по адресу 0x1EB95D88 в модуле D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005072FC (32-bit), Flags: CMdRe0, Thread: 0xDAC (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042C6AB in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: main() at D:/пономарёв александр/clashofclans-main/main.cpp (150):

    148:         for(int i=0; 1<count_pic; i++)
    149:         {
=>  150:             if(txMouseButtons() == 1 &&
    151:             txMouseX() >= centrPic[i].x &&
    152:             txMouseX() <= centrPic[i].x + centrPic[i].w_scr &&

--------------------------------------------------
Стек вызовов TX:

# 0 in int main() at D:\пономарёв александр\clashofclans-main\main.cpp (151):

    149:         {
    150:             if(txMouseButtons() == 1 &&
=>  151:             txMouseX() >= centrPic[i].x &&
    152:             txMouseX() <= centrPic[i].x + centrPic[i].w_scr &&
    153:             txMouseY() >= centrPic[i].y &&

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\codeblocks\mingw\include\txlib.h
Compiled:	Oct  9 2023 19:10:16, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 09 2023 19:10:37

Run file:	D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe
Directory:	D:\пономарёв александр\clashofclans-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x0042C6AB в функции main() в файле D:/пономарёв александр/clashofclans-main/main.cpp на строке 150. Попытка прочесть данные по адресу 0x1EB95D88 в модуле D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005072FC (32-bit), Flags: CMdRe0, Thread: 0xDAC (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042C6AB in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: main() at D:/пономарёв александр/clashofclans-main/main.cpp (150):

    148:         for(int i=0; 1<count_pic; i++)
    149:         {
=>  150:             if(txMouseButtons() == 1 &&
    151:             txMouseX() >= centrPic[i].x &&
    152:             txMouseX() <= centrPic[i].x + centrPic[i].w_scr &&

--------------------------------------------------
Стек вызовов TX:

# 0 in int main() at D:\пономарёв александр\clashofclans-main\main.cpp (151):

    149:         {
    150:             if(txMouseButtons() == 1 &&
=>  151:             txMouseX() >= centrPic[i].x &&
    152:             txMouseX() <= centrPic[i].x + centrPic[i].w_scr &&
    153:             txMouseY() >= centrPic[i].y &&

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\codeblocks\mingw\include\txlib.h
Compiled:	Oct  9 2023 19:10:16, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 09 2023 19:10:37

Run file:	D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe
Directory:	D:\пономарёв александр\clashofclans-main

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x0042C6C6 в функции main() в файле D:/пономарёв александр/clashofclans-main/main.cpp на строке 181. Попытка прочесть данные по адресу 0xECE0F250 в модуле D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005052FC (32-bit), Flags: CMdRe0, Thread: 0x24F4 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042C6C6 in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: main() at D:/пономарёв александр/clashofclans-main/main.cpp (181):

    179:             if (GetAsyncKeyState (VK_OEM_PLUS) || (VK_ADD))
    180:             {
=>  181:                 centrPic[vybor].w_scr = centrPic[vybor].w_scr * 1.1;
    182:                 centrPic[vybor].h_scr = centrPic[vybor].h_scr * 1.1;
    183:             }

--------------------------------------------------
Стек вызовов TX:

# 0 in int main() at D:\пономарёв александр\clashofclans-main\main.cpp (155):

    153:         char str[10];
    154:         sprintf(str, "индекс чёто там  = %d", vybor);
=>  155:         txTextOut(50, 650, str);
    156: 
    157:         if(vybor>=0)

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\codeblocks\mingw\include\txlib.h
Compiled:	Oct 13 2023 18:56:19, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 13 2023 18:56:39

Run file:	D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe
Directory:	D:\пономарёв александр\clashofclans-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x0042C6C6 в функции main() в файле D:/пономарёв александр/clashofclans-main/main.cpp на строке 181. Попытка прочесть данные по адресу 0xECE0F250 в модуле D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005052FC (32-bit), Flags: CMdRe0, Thread: 0x24F4 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042C6C6 in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: main() at D:/пономарёв александр/clashofclans-main/main.cpp (181):

    179:             if (GetAsyncKeyState (VK_OEM_PLUS) || (VK_ADD))
    180:             {
=>  181:                 centrPic[vybor].w_scr = centrPic[vybor].w_scr * 1.1;
    182:                 centrPic[vybor].h_scr = centrPic[vybor].h_scr * 1.1;
    183:             }

--------------------------------------------------
Стек вызовов TX:

# 0 in int main() at D:\пономарёв александр\clashofclans-main\main.cpp (155):

    153:         char str[10];
    154:         sprintf(str, "индекс чёто там  = %d", vybor);
=>  155:         txTextOut(50, 650, str);
    156: 
    157:         if(vybor>=0)

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\codeblocks\mingw\include\txlib.h
Compiled:	Oct 13 2023 18:56:19, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 13 2023 18:56:39

Run file:	D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe
Directory:	D:\пономарёв александр\clashofclans-main

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x0042C6C6 в функции main() в файле D:/пономарёв александр/clashofclans-main/main.cpp на строке 181. Попытка прочесть данные по адресу 0xECE0F250 в модуле D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005052FC (32-bit), Flags: CMdRe0, Thread: 0x1274 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042C6C6 in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: main() at D:/пономарёв александр/clashofclans-main/main.cpp (181):

    179:             if (GetAsyncKeyState (VK_OEM_PLUS) || (VK_ADD))
    180:             {
=>  181:                 centrPic[vybor].w_scr = centrPic[vybor].w_scr * 1.1;
    182:                 centrPic[vybor].h_scr = centrPic[vybor].h_scr * 1.1;
    183:             }

--------------------------------------------------
Стек вызовов TX:

# 0 in int main() at D:\пономарёв александр\clashofclans-main\main.cpp (155):

    153:         char str[10];
    154:         sprintf(str, "индекс чёто там  = %d", vybor);
=>  155:         txTextOut(50, 650, str);
    156: 
    157:         if(vybor>=0)

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\codeblocks\mingw\include\txlib.h
Compiled:	Oct 13 2023 18:58:02, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 13 2023 18:58:21

Run file:	D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe
Directory:	D:\пономарёв александр\clashofclans-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x0042C6C6 в функции main() в файле D:/пономарёв александр/clashofclans-main/main.cpp на строке 181. Попытка прочесть данные по адресу 0xECE0F250 в модуле D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005052FC (32-bit), Flags: CMdRe0, Thread: 0x1274 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042C6C6 in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: main() at D:/пономарёв александр/clashofclans-main/main.cpp (181):

    179:             if (GetAsyncKeyState (VK_OEM_PLUS) || (VK_ADD))
    180:             {
=>  181:                 centrPic[vybor].w_scr = centrPic[vybor].w_scr * 1.1;
    182:                 centrPic[vybor].h_scr = centrPic[vybor].h_scr * 1.1;
    183:             }

--------------------------------------------------
Стек вызовов TX:

# 0 in int main() at D:\пономарёв александр\clashofclans-main\main.cpp (155):

    153:         char str[10];
    154:         sprintf(str, "индекс чёто там  = %d", vybor);
=>  155:         txTextOut(50, 650, str);
    156: 
    157:         if(vybor>=0)

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\codeblocks\mingw\include\txlib.h
Compiled:	Oct 13 2023 18:58:02, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 13 2023 18:58:21

Run file:	D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe
Directory:	D:\пономарёв александр\clashofclans-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe, файл: d:\codeblocks\mingw\include\txlib.h, строка: 10851, функция: bool {anonymous}::TX::_txBuffer_Delete(HDC__**),

Сообщение: Параметр "*dc" неверен. Возможно, этот холст не создан, или уже уничтожен, или не загрузилась картинка.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005072FC (32-bit), Flags: CMdRe0, Thread: 0x810 (Main), GetLastError(): 13 (Недопустимые данные). 

--------------------------------------------------
Стек вызовов:

# 0 0x0041075E in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: _txBuffer_Delete() at d:/codeblocks/mingw/include/txlib.h (10851)
# 1 0x00421DB7 in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13597)
# 2 0x00422027 in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13619)

# 3 0x0042CE34 in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: main() at D:/пономарёв александр/clashofclans-main/main.cpp (243):

    241:     for (int i=0; i<count_pic; i++)
    242:     {
=>  243:         txDeleteDC(centrPic[i].pic);
    244:     }
    245: 

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txBuffer_Delete(HDC__**) at d:\codeblocks\mingw\include\txlib.h (10851):

  10849: $1  if (_TX_ARGUMENT_FAILED (dc)) return false;
  10850: $   if (                   !*dc)  return false;
=>10851: $   if (_TX_HDC_FAILED     (*dc)) return false;
  10852: 
  10853: $   if (!Win32::GetObjectType (Win32::GetCurrentObject (*dc, OBJ_BITMAP))) return false;

# 1 in bool {anonymous}::TX::txDeleteDC(HDC__**) at d:\codeblocks\mingw\include\txlib.h (13597):

  13595: 
  13596: $   HDC  dc = *pdc;
=>13597: $   bool ok = _txBuffer_Delete (pdc);
  13598: $   if (!ok) return false;
  13599: 

# 2 in bool {anonymous}::TX::txDeleteDC(HDC) at d:\codeblocks\mingw\include\txlib.h (13619):

  13617: bool txDeleteDC (HDC dc)
  13618:     {
=>13619: $1  return txDeleteDC (&dc);
  13620:     }
  13621: 

# 3 in int main() at D:\пономарёв александр\clashofclans-main\main.cpp (243):

    241:     for (int i=0; i<count_pic; i++)
    242:     {
=>  243:         txDeleteDC(centrPic[i].pic);
    244:     }
    245: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\codeblocks\mingw\include\txlib.h
Compiled:	Oct 16 2023 19:20:17, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 16 2023 19:20:38

Run file:	D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe
Directory:	D:\пономарёв александр\clashofclans-main

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x004518EC в функции _M_is_leaked() в файле d:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h на строке 45. Попытка прочесть данные по адресу 0xFFFFFFFF в модуле D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005082FC (32-bit), Flags: CMdRe0, Thread: 0x1A94 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x004518EC in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: _M_is_leaked() at d:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 1 0x00480553 in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: _M_grab() at d:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 2 0x00486E3F in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe at d:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 3 0x0042C582 in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: main() at D:/пономарёв александр/clashofclans-main/main.cpp (71):

     69:                     txSleep(10);
     70:                 }
=>   71:                 centrPic[nCentrPic]  = {500,
     72:                                         100,
     73:                                         menuPic[npic].pic,

--------------------------------------------------
Стек вызовов TX:

# 0 in int main() at D:\пономарёв александр\clashofclans-main\main.cpp (67):

     65:             if(menuPic[i].Click() && menuPic[i].visible)
     66:             {
=>   67:                 while(txMouseButtons() == 1)
     68:                 {
     69:                     txSleep(10);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\codeblocks\mingw\include\txlib.h
Compiled:	Oct 16 2023 19:43:43, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 16 2023 19:44:03

Run file:	D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe
Directory:	D:\пономарёв александр\clashofclans-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x004518EC в функции _M_is_leaked() в файле d:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h на строке 45. Попытка прочесть данные по адресу 0xFFFFFFFF в модуле D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005082FC (32-bit), Flags: CMdRe0, Thread: 0x1A94 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x004518EC in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: _M_is_leaked() at d:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 1 0x00480553 in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: _M_grab() at d:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 2 0x00486E3F in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe at d:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 3 0x0042C582 in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: main() at D:/пономарёв александр/clashofclans-main/main.cpp (71):

     69:                     txSleep(10);
     70:                 }
=>   71:                 centrPic[nCentrPic]  = {500,
     72:                                         100,
     73:                                         menuPic[npic].pic,

--------------------------------------------------
Стек вызовов TX:

# 0 in int main() at D:\пономарёв александр\clashofclans-main\main.cpp (67):

     65:             if(menuPic[i].Click() && menuPic[i].visible)
     66:             {
=>   67:                 while(txMouseButtons() == 1)
     68:                 {
     69:                     txSleep(10);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\codeblocks\mingw\include\txlib.h
Compiled:	Oct 16 2023 19:43:43, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 16 2023 19:44:03

Run file:	D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe
Directory:	D:\пономарёв александр\clashofclans-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe, файл: d:\codeblocks\mingw\include\txlib.h, строка: 10851, функция: bool {anonymous}::TX::_txBuffer_Delete(HDC__**),

Сообщение: Параметр "*dc" неверен. Возможно, этот холст не создан, или уже уничтожен, или не загрузилась картинка.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005082FC (32-bit), Flags: CMdRe0, Thread: 0x1A44 (Main), GetLastError(): 13 (Недопустимые данные). 

--------------------------------------------------
Стек вызовов:

# 0 0x0041075E in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: _txBuffer_Delete() at d:/codeblocks/mingw/include/txlib.h (10851)
# 1 0x00421DB7 in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13597)
# 2 0x00422027 in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13619)

# 3 0x0042CCB1 in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: main() at D:/пономарёв александр/clashofclans-main/main.cpp (162):

    160:     for (int i=0; i<count_pic; i++)
    161:     {
=>  162:         txDeleteDC(centrPic[i].pic);
    163:     }
    164: 

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txBuffer_Delete(HDC__**) at d:\codeblocks\mingw\include\txlib.h (10851):

  10849: $1  if (_TX_ARGUMENT_FAILED (dc)) return false;
  10850: $   if (                   !*dc)  return false;
=>10851: $   if (_TX_HDC_FAILED     (*dc)) return false;
  10852: 
  10853: $   if (!Win32::GetObjectType (Win32::GetCurrentObject (*dc, OBJ_BITMAP))) return false;

# 1 in bool {anonymous}::TX::txDeleteDC(HDC__**) at d:\codeblocks\mingw\include\txlib.h (13597):

  13595: 
  13596: $   HDC  dc = *pdc;
=>13597: $   bool ok = _txBuffer_Delete (pdc);
  13598: $   if (!ok) return false;
  13599: 

# 2 in bool {anonymous}::TX::txDeleteDC(HDC) at d:\codeblocks\mingw\include\txlib.h (13619):

  13617: bool txDeleteDC (HDC dc)
  13618:     {
=>13619: $1  return txDeleteDC (&dc);
  13620:     }
  13621: 

# 3 in int main() at D:\пономарёв александр\clashofclans-main\main.cpp (162):

    160:     for (int i=0; i<count_pic; i++)
    161:     {
=>  162:         txDeleteDC(centrPic[i].pic);
    163:     }
    164: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\codeblocks\mingw\include\txlib.h
Compiled:	Oct 16 2023 19:45:27, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 16 2023 19:45:49

Run file:	D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe
Directory:	D:\пономарёв александр\clashofclans-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe, файл: d:\codeblocks\mingw\include\txlib.h, строка: 10851, функция: bool {anonymous}::TX::_txBuffer_Delete(HDC__**),

Сообщение: Параметр "*dc" неверен. Возможно, этот холст не создан, или уже уничтожен, или не загрузилась картинка.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005082FC (32-bit), Flags: CMdRe0, Thread: 0x2320 (Main), GetLastError(): 13 (Недопустимые данные). 

--------------------------------------------------
Стек вызовов:

# 0 0x0041075E in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: _txBuffer_Delete() at d:/codeblocks/mingw/include/txlib.h (10851)
# 1 0x00421DB7 in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13597)
# 2 0x00422027 in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13619)

# 3 0x0042CCB1 in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: main() at D:/пономарёв александр/clashofclans-main/main.cpp (162):

    160:     for (int i=0; i<count_pic; i++)
    161:     {
=>  162:         txDeleteDC(centrPic[i].pic);
    163:     }
    164: 

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txBuffer_Delete(HDC__**) at d:\codeblocks\mingw\include\txlib.h (10851):

  10849: $1  if (_TX_ARGUMENT_FAILED (dc)) return false;
  10850: $   if (                   !*dc)  return false;
=>10851: $   if (_TX_HDC_FAILED     (*dc)) return false;
  10852: 
  10853: $   if (!Win32::GetObjectType (Win32::GetCurrentObject (*dc, OBJ_BITMAP))) return false;

# 1 in bool {anonymous}::TX::txDeleteDC(HDC__**) at d:\codeblocks\mingw\include\txlib.h (13597):

  13595: 
  13596: $   HDC  dc = *pdc;
=>13597: $   bool ok = _txBuffer_Delete (pdc);
  13598: $   if (!ok) return false;
  13599: 

# 2 in bool {anonymous}::TX::txDeleteDC(HDC) at d:\codeblocks\mingw\include\txlib.h (13619):

  13617: bool txDeleteDC (HDC dc)
  13618:     {
=>13619: $1  return txDeleteDC (&dc);
  13620:     }
  13621: 

# 3 in int main() at D:\пономарёв александр\clashofclans-main\main.cpp (162):

    160:     for (int i=0; i<count_pic; i++)
    161:     {
=>  162:         txDeleteDC(centrPic[i].pic);
    163:     }
    164: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\codeblocks\mingw\include\txlib.h
Compiled:	Oct 16 2023 19:45:27, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 20 2023 18:41:45

Run file:	D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe
Directory:	D:\пономарёв александр\clashofclans-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe, файл: d:\codeblocks\mingw\include\txlib.h, строка: 10851, функция: bool {anonymous}::TX::_txBuffer_Delete(HDC__**),

Сообщение: Параметр "*dc" неверен. Возможно, этот холст не создан, или уже уничтожен, или не загрузилась картинка.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005082FC (32-bit), Flags: CMdRe0, Thread: 0x988 (Main), GetLastError(): 13 (Недопустимые данные). 

--------------------------------------------------
Стек вызовов:

# 0 0x0041075E in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: _txBuffer_Delete() at d:/codeblocks/mingw/include/txlib.h (10851)
# 1 0x00421DB7 in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13597)
# 2 0x00422027 in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13619)

# 3 0x0042CCB1 in D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe: main() at D:/пономарёв александр/clashofclans-main/main.cpp (162):

    160:     for (int i=0; i<count_pic; i++)
    161:     {
=>  162:         txDeleteDC(centrPic[i].pic);
    163:     }
    164: 

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txBuffer_Delete(HDC__**) at d:\codeblocks\mingw\include\txlib.h (10851):

  10849: $1  if (_TX_ARGUMENT_FAILED (dc)) return false;
  10850: $   if (                   !*dc)  return false;
=>10851: $   if (_TX_HDC_FAILED     (*dc)) return false;
  10852: 
  10853: $   if (!Win32::GetObjectType (Win32::GetCurrentObject (*dc, OBJ_BITMAP))) return false;

# 1 in bool {anonymous}::TX::txDeleteDC(HDC__**) at d:\codeblocks\mingw\include\txlib.h (13597):

  13595: 
  13596: $   HDC  dc = *pdc;
=>13597: $   bool ok = _txBuffer_Delete (pdc);
  13598: $   if (!ok) return false;
  13599: 

# 2 in bool {anonymous}::TX::txDeleteDC(HDC) at d:\codeblocks\mingw\include\txlib.h (13619):

  13617: bool txDeleteDC (HDC dc)
  13618:     {
=>13619: $1  return txDeleteDC (&dc);
  13620:     }
  13621: 

# 3 in int main() at D:\пономарёв александр\clashofclans-main\main.cpp (162):

    160:     for (int i=0; i<count_pic; i++)
    161:     {
=>  162:         txDeleteDC(centrPic[i].pic);
    163:     }
    164: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\codeblocks\mingw\include\txlib.h
Compiled:	Oct 16 2023 19:45:27, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 20 2023 18:41:50

Run file:	D:\пономарёв александр\clashofclans-main\bin\Debug\clash.exe
Directory:	D:\пономарёв александр\clashofclans-main

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00401433 в функции __exchange_and_add() в файле d:/program/codeblocks/mingw/include/c++/4.8.1/ext/atomicity.h на строке 47. Попытка записать данные по адресу 0x004CD81E в модуле D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005082FC (32-bit), Flags: CMdRe0, Thread: 0x4EC8 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00401433 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: __exchange_and_add() at d:/program/codeblocks/mingw/include/c++/4.8.1/ext/atomicity.h (47):

     45:   static inline _Atomic_word 
     46:   __exchange_and_add(volatile _Atomic_word* __mem, int __val)
=>   47:   { return __atomic_fetch_add(__mem, __val, __ATOMIC_ACQ_REL); }
     48: 
     49:   static inline void

# 1 0x004014A5 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: __exchange_and_add_dispatch() at d:/program/codeblocks/mingw/include/c++/4.8.1/ext/atomicity.h (80):

     78: #ifdef __GTHREADS
     79:     if (__gthread_active_p())
=>   80:       return __exchange_and_add(__mem, __val);
     81:     else
     82:       return __exchange_and_add_single(__mem, __val);

# 2 0x00480CDA in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: _M_dispose() at d:/program/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 3 0x00488BD3 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe at d:/program/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 4 0x0044C9BA in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe at d:/program/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 5 0x0042C471 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: main() at D:/проекты и другое/clashofclans-main/main.cpp (20):

     18:     menuPic[1] = {20, 300, txLoadImage ("pictures/build/bilder.bmp"), 54, 63, 54, 63, false, "обычные здания"};
     19:     menuPic[2] = {20, 100, txLoadImage ("pictures/defense/zabor.bmp"), 120, 120, 238, 212, false, "защитные здания"};
=>   20:     menuPic[3] = {20, 300, txLoadImage ("pictures/defense/ad.bmp"), 120, 120, 155, 215, false, "защитные здания"};
     21:     menuPic[4] = {20, 500, txLoadImage ("pictures/defense/dolbit.bmp"), 120, 120, 159, 190, false, "защитные здания"};
     22:     menuPic[5] = {120, 100, txLoadImage ("pictures/defense/gun2.bmp"), 120, 120, 82, 78, false, "защитные здания"};

--------------------------------------------------
Стек вызовов TX:

# 0 in int main() at D:\проекты и другое\clashofclans-main\main.cpp (20):

     18:     menuPic[1] = {20, 300, txLoadImage ("pictures/build/bilder.bmp"), 54, 63, 54, 63, false, "обычные здания"};
     19:     menuPic[2] = {20, 100, txLoadImage ("pictures/defense/zabor.bmp"), 120, 120, 238, 212, false, "защитные здания"};
=>   20:     menuPic[3] = {20, 300, txLoadImage ("pictures/defense/ad.bmp"), 120, 120, 155, 215, false, "защитные здания"};
     21:     menuPic[4] = {20, 500, txLoadImage ("pictures/defense/dolbit.bmp"), 120, 120, 159, 190, false, "защитные здания"};
     22:     menuPic[5] = {120, 100, txLoadImage ("pictures/defense/gun2.bmp"), 120, 120, 82, 78, false, "защитные здания"};

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Oct 23 2023 20:07:51, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 23 2023 20:07:55

Run file:	D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofclans-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00401433 в функции __exchange_and_add() в файле d:/program/codeblocks/mingw/include/c++/4.8.1/ext/atomicity.h на строке 47. Попытка записать данные по адресу 0x004CD81E в модуле D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005082FC (32-bit), Flags: CMdRe0, Thread: 0x4EC8 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00401433 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: __exchange_and_add() at d:/program/codeblocks/mingw/include/c++/4.8.1/ext/atomicity.h (47):

     45:   static inline _Atomic_word 
     46:   __exchange_and_add(volatile _Atomic_word* __mem, int __val)
=>   47:   { return __atomic_fetch_add(__mem, __val, __ATOMIC_ACQ_REL); }
     48: 
     49:   static inline void

# 1 0x004014A5 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: __exchange_and_add_dispatch() at d:/program/codeblocks/mingw/include/c++/4.8.1/ext/atomicity.h (80):

     78: #ifdef __GTHREADS
     79:     if (__gthread_active_p())
=>   80:       return __exchange_and_add(__mem, __val);
     81:     else
     82:       return __exchange_and_add_single(__mem, __val);

# 2 0x00480CDA in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: _M_dispose() at d:/program/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 3 0x00488BD3 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe at d:/program/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 4 0x0044C9BA in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe at d:/program/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 5 0x0042C471 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: main() at D:/проекты и другое/clashofclans-main/main.cpp (20):

     18:     menuPic[1] = {20, 300, txLoadImage ("pictures/build/bilder.bmp"), 54, 63, 54, 63, false, "обычные здания"};
     19:     menuPic[2] = {20, 100, txLoadImage ("pictures/defense/zabor.bmp"), 120, 120, 238, 212, false, "защитные здания"};
=>   20:     menuPic[3] = {20, 300, txLoadImage ("pictures/defense/ad.bmp"), 120, 120, 155, 215, false, "защитные здания"};
     21:     menuPic[4] = {20, 500, txLoadImage ("pictures/defense/dolbit.bmp"), 120, 120, 159, 190, false, "защитные здания"};
     22:     menuPic[5] = {120, 100, txLoadImage ("pictures/defense/gun2.bmp"), 120, 120, 82, 78, false, "защитные здания"};

--------------------------------------------------
Стек вызовов TX:

# 0 in int main() at D:\проекты и другое\clashofclans-main\main.cpp (20):

     18:     menuPic[1] = {20, 300, txLoadImage ("pictures/build/bilder.bmp"), 54, 63, 54, 63, false, "обычные здания"};
     19:     menuPic[2] = {20, 100, txLoadImage ("pictures/defense/zabor.bmp"), 120, 120, 238, 212, false, "защитные здания"};
=>   20:     menuPic[3] = {20, 300, txLoadImage ("pictures/defense/ad.bmp"), 120, 120, 155, 215, false, "защитные здания"};
     21:     menuPic[4] = {20, 500, txLoadImage ("pictures/defense/dolbit.bmp"), 120, 120, 159, 190, false, "защитные здания"};
     22:     menuPic[5] = {120, 100, txLoadImage ("pictures/defense/gun2.bmp"), 120, 120, 82, 78, false, "защитные здания"};

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Oct 23 2023 20:07:51, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 23 2023 20:07:54

Run file:	D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofclans-main

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00401433 в функции __exchange_and_add() в файле d:/program/codeblocks/mingw/include/c++/4.8.1/ext/atomicity.h на строке 47. Попытка записать данные по адресу 0x004CD81E в модуле D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005082FC (32-bit), Flags: CMdRe0, Thread: 0x2594 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00401433 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: __exchange_and_add() at d:/program/codeblocks/mingw/include/c++/4.8.1/ext/atomicity.h (47):

     45:   static inline _Atomic_word 
     46:   __exchange_and_add(volatile _Atomic_word* __mem, int __val)
=>   47:   { return __atomic_fetch_add(__mem, __val, __ATOMIC_ACQ_REL); }
     48: 
     49:   static inline void

# 1 0x004014A5 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: __exchange_and_add_dispatch() at d:/program/codeblocks/mingw/include/c++/4.8.1/ext/atomicity.h (80):

     78: #ifdef __GTHREADS
     79:     if (__gthread_active_p())
=>   80:       return __exchange_and_add(__mem, __val);
     81:     else
     82:       return __exchange_and_add_single(__mem, __val);

# 2 0x00480CDA in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: _M_dispose() at d:/program/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 3 0x00488BD3 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe at d:/program/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 4 0x0044C9BA in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe at d:/program/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 5 0x0042C471 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: main() at D:/проекты и другое/clashofclans-main/main.cpp (20):

     18:     menuPic[1] = {20, 300, txLoadImage ("pictures/build/bilder.bmp"), 54, 63, 54, 63, false, "обычные здания"};
     19:     menuPic[2] = {20, 100, txLoadImage ("pictures/defense/zabor.bmp"), 120, 120, 238, 212, false, "защитные здания"};
=>   20:     menuPic[3] = {20, 300, txLoadImage ("pictures/defense/ad.bmp"), 120, 120, 155, 215, false, "защитные здания"};
     21:     menuPic[4] = {20, 500, txLoadImage ("pictures/defense/dolbit.bmp"), 120, 120, 159, 190, false, "защитные здания"};
     22:     menuPic[5] = {120, 100, txLoadImage ("pictures/defense/gun2.bmp"), 120, 120, 82, 78, false, "защитные здания"};

--------------------------------------------------
Стек вызовов TX:

# 0 in int main() at D:\проекты и другое\clashofclans-main\main.cpp (20):

     18:     menuPic[1] = {20, 300, txLoadImage ("pictures/build/bilder.bmp"), 54, 63, 54, 63, false, "обычные здания"};
     19:     menuPic[2] = {20, 100, txLoadImage ("pictures/defense/zabor.bmp"), 120, 120, 238, 212, false, "защитные здания"};
=>   20:     menuPic[3] = {20, 300, txLoadImage ("pictures/defense/ad.bmp"), 120, 120, 155, 215, false, "защитные здания"};
     21:     menuPic[4] = {20, 500, txLoadImage ("pictures/defense/dolbit.bmp"), 120, 120, 159, 190, false, "защитные здания"};
     22:     menuPic[5] = {120, 100, txLoadImage ("pictures/defense/gun2.bmp"), 120, 120, 82, 78, false, "защитные здания"};

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Oct 23 2023 20:08:08, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 23 2023 20:08:13

Run file:	D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofclans-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00401433 в функции __exchange_and_add() в файле d:/program/codeblocks/mingw/include/c++/4.8.1/ext/atomicity.h на строке 47. Попытка записать данные по адресу 0x004CD81E в модуле D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005082FC (32-bit), Flags: CMdRe0, Thread: 0x2594 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00401433 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: __exchange_and_add() at d:/program/codeblocks/mingw/include/c++/4.8.1/ext/atomicity.h (47):

     45:   static inline _Atomic_word 
     46:   __exchange_and_add(volatile _Atomic_word* __mem, int __val)
=>   47:   { return __atomic_fetch_add(__mem, __val, __ATOMIC_ACQ_REL); }
     48: 
     49:   static inline void

# 1 0x004014A5 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: __exchange_and_add_dispatch() at d:/program/codeblocks/mingw/include/c++/4.8.1/ext/atomicity.h (80):

     78: #ifdef __GTHREADS
     79:     if (__gthread_active_p())
=>   80:       return __exchange_and_add(__mem, __val);
     81:     else
     82:       return __exchange_and_add_single(__mem, __val);

# 2 0x00480CDA in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: _M_dispose() at d:/program/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 3 0x00488BD3 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe at d:/program/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 4 0x0044C9BA in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe at d:/program/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 5 0x0042C471 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: main() at D:/проекты и другое/clashofclans-main/main.cpp (20):

     18:     menuPic[1] = {20, 300, txLoadImage ("pictures/build/bilder.bmp"), 54, 63, 54, 63, false, "обычные здания"};
     19:     menuPic[2] = {20, 100, txLoadImage ("pictures/defense/zabor.bmp"), 120, 120, 238, 212, false, "защитные здания"};
=>   20:     menuPic[3] = {20, 300, txLoadImage ("pictures/defense/ad.bmp"), 120, 120, 155, 215, false, "защитные здания"};
     21:     menuPic[4] = {20, 500, txLoadImage ("pictures/defense/dolbit.bmp"), 120, 120, 159, 190, false, "защитные здания"};
     22:     menuPic[5] = {120, 100, txLoadImage ("pictures/defense/gun2.bmp"), 120, 120, 82, 78, false, "защитные здания"};

--------------------------------------------------
Стек вызовов TX:

# 0 in int main() at D:\проекты и другое\clashofclans-main\main.cpp (20):

     18:     menuPic[1] = {20, 300, txLoadImage ("pictures/build/bilder.bmp"), 54, 63, 54, 63, false, "обычные здания"};
     19:     menuPic[2] = {20, 100, txLoadImage ("pictures/defense/zabor.bmp"), 120, 120, 238, 212, false, "защитные здания"};
=>   20:     menuPic[3] = {20, 300, txLoadImage ("pictures/defense/ad.bmp"), 120, 120, 155, 215, false, "защитные здания"};
     21:     menuPic[4] = {20, 500, txLoadImage ("pictures/defense/dolbit.bmp"), 120, 120, 159, 190, false, "защитные здания"};
     22:     menuPic[5] = {120, 100, txLoadImage ("pictures/defense/gun2.bmp"), 120, 120, 82, 78, false, "защитные здания"};

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Oct 23 2023 20:08:08, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 23 2023 20:08:12

Run file:	D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofclans-main

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00401433 в функции __exchange_and_add() в файле d:/program/codeblocks/mingw/include/c++/4.8.1/ext/atomicity.h на строке 47. Попытка записать данные по адресу 0x004CD81E в модуле D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005082FC (32-bit), Flags: CMdRe0, Thread: 0x4E58 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00401433 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: __exchange_and_add() at d:/program/codeblocks/mingw/include/c++/4.8.1/ext/atomicity.h (47):

     45:   static inline _Atomic_word 
     46:   __exchange_and_add(volatile _Atomic_word* __mem, int __val)
=>   47:   { return __atomic_fetch_add(__mem, __val, __ATOMIC_ACQ_REL); }
     48: 
     49:   static inline void

# 1 0x004014A5 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: __exchange_and_add_dispatch() at d:/program/codeblocks/mingw/include/c++/4.8.1/ext/atomicity.h (80):

     78: #ifdef __GTHREADS
     79:     if (__gthread_active_p())
=>   80:       return __exchange_and_add(__mem, __val);
     81:     else
     82:       return __exchange_and_add_single(__mem, __val);

# 2 0x00480CDA in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: _M_dispose() at d:/program/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 3 0x00488BD3 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe at d:/program/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 4 0x0044C9BA in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe at d:/program/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 5 0x0042C471 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: main() at D:/проекты и другое/clashofclans-main/main.cpp (20):

     18:     menuPic[1] = {20, 300, txLoadImage ("pictures/build/bilder.bmp"),  54,  63,  54,  63,  false, "обычные здания"};
     19:     menuPic[2] = {20, 100, txLoadImage ("pictures/defense/zabor.bmp"), 120, 120, 238, 212, false, "защитные здания"};
=>   20:     menuPic[3] = {20, 300, txLoadImage ("pictures/defense/ad.bmp"),    120, 120, 155, 215, false, "защитные здания"};
     21:     menuPic[4] = {20, 500, txLoadImage ("pictures/defense/dolbit.bmp"),120, 120, 159, 190, false, "защитные здания"};
     22:     menuPic[5] = {120, 100,txLoadImage ("pictures/defense/gun2.bmp"),  120, 120, 82,  78,  false, "защитные здания"};

--------------------------------------------------
Стек вызовов TX:

# 0 in int main() at D:\проекты и другое\clashofclans-main\main.cpp (20):

     18:     menuPic[1] = {20, 300, txLoadImage ("pictures/build/bilder.bmp"),  54,  63,  54,  63,  false, "обычные здания"};
     19:     menuPic[2] = {20, 100, txLoadImage ("pictures/defense/zabor.bmp"), 120, 120, 238, 212, false, "защитные здания"};
=>   20:     menuPic[3] = {20, 300, txLoadImage ("pictures/defense/ad.bmp"),    120, 120, 155, 215, false, "защитные здания"};
     21:     menuPic[4] = {20, 500, txLoadImage ("pictures/defense/dolbit.bmp"),120, 120, 159, 190, false, "защитные здания"};
     22:     menuPic[5] = {120, 100,txLoadImage ("pictures/defense/gun2.bmp"),  120, 120, 82,  78,  false, "защитные здания"};

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Oct 23 2023 20:09:22, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 23 2023 20:09:26

Run file:	D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofclans-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00401433 в функции __exchange_and_add() в файле d:/program/codeblocks/mingw/include/c++/4.8.1/ext/atomicity.h на строке 47. Попытка записать данные по адресу 0x004CD81E в модуле D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005082FC (32-bit), Flags: CMdRe0, Thread: 0x4E58 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x00401433 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: __exchange_and_add() at d:/program/codeblocks/mingw/include/c++/4.8.1/ext/atomicity.h (47):

     45:   static inline _Atomic_word 
     46:   __exchange_and_add(volatile _Atomic_word* __mem, int __val)
=>   47:   { return __atomic_fetch_add(__mem, __val, __ATOMIC_ACQ_REL); }
     48: 
     49:   static inline void

# 1 0x004014A5 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: __exchange_and_add_dispatch() at d:/program/codeblocks/mingw/include/c++/4.8.1/ext/atomicity.h (80):

     78: #ifdef __GTHREADS
     79:     if (__gthread_active_p())
=>   80:       return __exchange_and_add(__mem, __val);
     81:     else
     82:       return __exchange_and_add_single(__mem, __val);

# 2 0x00480CDA in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: _M_dispose() at d:/program/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 3 0x00488BD3 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe at d:/program/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 4 0x0044C9BA in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe at d:/program/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 5 0x0042C471 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: main() at D:/проекты и другое/clashofclans-main/main.cpp (20):

     18:     menuPic[1] = {20, 300, txLoadImage ("pictures/build/bilder.bmp"),  54,  63,  54,  63,  false, "обычные здания"};
     19:     menuPic[2] = {20, 100, txLoadImage ("pictures/defense/zabor.bmp"), 120, 120, 238, 212, false, "защитные здания"};
=>   20:     menuPic[3] = {20, 300, txLoadImage ("pictures/defense/ad.bmp"),    120, 120, 155, 215, false, "защитные здания"};
     21:     menuPic[4] = {20, 500, txLoadImage ("pictures/defense/dolbit.bmp"),120, 120, 159, 190, false, "защитные здания"};
     22:     menuPic[5] = {120, 100,txLoadImage ("pictures/defense/gun2.bmp"),  120, 120, 82,  78,  false, "защитные здания"};

--------------------------------------------------
Стек вызовов TX:

# 0 in int main() at D:\проекты и другое\clashofclans-main\main.cpp (20):

     18:     menuPic[1] = {20, 300, txLoadImage ("pictures/build/bilder.bmp"),  54,  63,  54,  63,  false, "обычные здания"};
     19:     menuPic[2] = {20, 100, txLoadImage ("pictures/defense/zabor.bmp"), 120, 120, 238, 212, false, "защитные здания"};
=>   20:     menuPic[3] = {20, 300, txLoadImage ("pictures/defense/ad.bmp"),    120, 120, 155, 215, false, "защитные здания"};
     21:     menuPic[4] = {20, 500, txLoadImage ("pictures/defense/dolbit.bmp"),120, 120, 159, 190, false, "защитные здания"};
     22:     menuPic[5] = {120, 100,txLoadImage ("pictures/defense/gun2.bmp"),  120, 120, 82,  78,  false, "защитные здания"};

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Oct 23 2023 20:09:22, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 23 2023 20:09:27

Run file:	D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofclans-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe, файл: d:\program\codeblocks\mingw\include\txlib.h, строка: 10851, функция: bool {anonymous}::TX::_txBuffer_Delete(HDC__**),

Сообщение: Параметр "*dc" неверен. Возможно, этот холст не создан, или уже уничтожен, или не загрузилась картинка.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005082FC (32-bit), Flags: CMdRe0, Thread: 0x1F74 (Main), GetLastError(): 13 (Недопустимые данные). 

--------------------------------------------------
Стек вызовов:

# 0 0x0041075E in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: _txBuffer_Delete() at d:/program/codeblocks/mingw/include/txlib.h (10851)
# 1 0x00421DB7 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: txDeleteDC() at d:/program/codeblocks/mingw/include/txlib.h (13597)
# 2 0x00422027 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: txDeleteDC() at d:/program/codeblocks/mingw/include/txlib.h (13619)

# 3 0x0042D3CC in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: main() at D:/проекты и другое/clashofclans-main/main.cpp (177):

    175:     for (int i=0; i<count_pic; i++)
    176:     {
=>  177:         txDeleteDC(centrPic[i].pic);
    178:     }
    179: 

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txBuffer_Delete(HDC__**) at d:\program\codeblocks\mingw\include\txlib.h (10851):

  10849: $1  if (_TX_ARGUMENT_FAILED (dc)) return false;
  10850: $   if (                   !*dc)  return false;
=>10851: $   if (_TX_HDC_FAILED     (*dc)) return false;
  10852: 
  10853: $   if (!Win32::GetObjectType (Win32::GetCurrentObject (*dc, OBJ_BITMAP))) return false;

# 1 in bool {anonymous}::TX::txDeleteDC(HDC__**) at d:\program\codeblocks\mingw\include\txlib.h (13597):

  13595: 
  13596: $   HDC  dc = *pdc;
=>13597: $   bool ok = _txBuffer_Delete (pdc);
  13598: $   if (!ok) return false;
  13599: 

# 2 in bool {anonymous}::TX::txDeleteDC(HDC) at d:\program\codeblocks\mingw\include\txlib.h (13619):

  13617: bool txDeleteDC (HDC dc)
  13618:     {
=>13619: $1  return txDeleteDC (&dc);
  13620:     }
  13621: 

# 3 in int main() at D:\проекты и другое\clashofclans-main\main.cpp (177):

    175:     for (int i=0; i<count_pic; i++)
    176:     {
=>  177:         txDeleteDC(centrPic[i].pic);
    178:     }
    179: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Oct 23 2023 20:09:45, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 23 2023 20:09:50

Run file:	D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofclans-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe, файл: d:\program\codeblocks\mingw\include\txlib.h, строка: 10851, функция: bool {anonymous}::TX::_txBuffer_Delete(HDC__**),

Сообщение: Параметр "*dc" неверен. Возможно, этот холст не создан, или уже уничтожен, или не загрузилась картинка.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005082FC (32-bit), Flags: CMdRe0, Thread: 0x5504 (Main), GetLastError(): 13 (Недопустимые данные). 

--------------------------------------------------
Стек вызовов:

# 0 0x0041075E in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: _txBuffer_Delete() at d:/program/codeblocks/mingw/include/txlib.h (10851)
# 1 0x00421DB7 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: txDeleteDC() at d:/program/codeblocks/mingw/include/txlib.h (13597)
# 2 0x00422027 in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: txDeleteDC() at d:/program/codeblocks/mingw/include/txlib.h (13619)

# 3 0x0042D3CC in D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe: main() at D:/проекты и другое/clashofclans-main/main.cpp (177):

    175:     for (int i=0; i<count_pic; i++)
    176:     {
=>  177:         txDeleteDC(centrPic[i].pic);
    178:     }
    179: 

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txBuffer_Delete(HDC__**) at d:\program\codeblocks\mingw\include\txlib.h (10851):

  10849: $1  if (_TX_ARGUMENT_FAILED (dc)) return false;
  10850: $   if (                   !*dc)  return false;
=>10851: $   if (_TX_HDC_FAILED     (*dc)) return false;
  10852: 
  10853: $   if (!Win32::GetObjectType (Win32::GetCurrentObject (*dc, OBJ_BITMAP))) return false;

# 1 in bool {anonymous}::TX::txDeleteDC(HDC__**) at d:\program\codeblocks\mingw\include\txlib.h (13597):

  13595: 
  13596: $   HDC  dc = *pdc;
=>13597: $   bool ok = _txBuffer_Delete (pdc);
  13598: $   if (!ok) return false;
  13599: 

# 2 in bool {anonymous}::TX::txDeleteDC(HDC) at d:\program\codeblocks\mingw\include\txlib.h (13619):

  13617: bool txDeleteDC (HDC dc)
  13618:     {
=>13619: $1  return txDeleteDC (&dc);
  13620:     }
  13621: 

# 3 in int main() at D:\проекты и другое\clashofclans-main\main.cpp (177):

    175:     for (int i=0; i<count_pic; i++)
    176:     {
=>  177:         txDeleteDC(centrPic[i].pic);
    178:     }
    179: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Oct 27 2023 18:25:31, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 27 2023 18:25:47

Run file:	D:\проекты и другое\clashofclans-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofclans-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe, файл: d:\codeblocks\mingw\include\txlib.h, строка: 10851, функция: bool {anonymous}::TX::_txBuffer_Delete(HDC__**),

Сообщение: Параметр "*dc" неверен. Возможно, этот холст не создан, или уже уничтожен, или не загрузилась картинка.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005082FC (32-bit), Flags: CMdRe0, Thread: 0x1518 (Main), GetLastError(): 13 (Недопустимые данные). 

--------------------------------------------------
Стек вызовов:

# 0 0x0041075E in D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe: _txBuffer_Delete() at d:/codeblocks/mingw/include/txlib.h (10851)
# 1 0x00421DB7 in D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13597)
# 2 0x00422027 in D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13619)

# 3 0x0042D5E5 in D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe: main() at D:/пономарёв александр/clashofclans-main/clashofclans-main/main.cpp (188):

    186:     for (int i=0; i<count_pic; i++)
    187:     {
=>  188:         txDeleteDC(centrPic[i].pic);
    189:     }
    190: 

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txBuffer_Delete(HDC__**) at d:\codeblocks\mingw\include\txlib.h (10851):

  10849: $1  if (_TX_ARGUMENT_FAILED (dc)) return false;
  10850: $   if (                   !*dc)  return false;
=>10851: $   if (_TX_HDC_FAILED     (*dc)) return false;
  10852: 
  10853: $   if (!Win32::GetObjectType (Win32::GetCurrentObject (*dc, OBJ_BITMAP))) return false;

# 1 in bool {anonymous}::TX::txDeleteDC(HDC__**) at d:\codeblocks\mingw\include\txlib.h (13597):

  13595: 
  13596: $   HDC  dc = *pdc;
=>13597: $   bool ok = _txBuffer_Delete (pdc);
  13598: $   if (!ok) return false;
  13599: 

# 2 in bool {anonymous}::TX::txDeleteDC(HDC) at d:\codeblocks\mingw\include\txlib.h (13619):

  13617: bool txDeleteDC (HDC dc)
  13618:     {
=>13619: $1  return txDeleteDC (&dc);
  13620:     }
  13621: 

# 3 in int main() at D:\пономарёв александр\clashofclans-main\clashofclans-main\main.cpp (188):

    186:     for (int i=0; i<count_pic; i++)
    187:     {
=>  188:         txDeleteDC(centrPic[i].pic);
    189:     }
    190: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\codeblocks\mingw\include\txlib.h
Compiled:	Oct 30 2023 19:56:02, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 30 2023 19:56:22

Run file:	D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe
Directory:	D:\пономарёв александр\clashofclans-main\clashofclans-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe, файл: d:\codeblocks\mingw\include\txlib.h, строка: 10851, функция: bool {anonymous}::TX::_txBuffer_Delete(HDC__**),

Сообщение: Параметр "*dc" неверен. Возможно, этот холст не создан, или уже уничтожен, или не загрузилась картинка.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005082FC (32-bit), Flags: CMdRe0, Thread: 0x2120 (Main), GetLastError(): 13 (Недопустимые данные). 

--------------------------------------------------
Стек вызовов:

# 0 0x0041075E in D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe: _txBuffer_Delete() at d:/codeblocks/mingw/include/txlib.h (10851)
# 1 0x00421DB7 in D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13597)
# 2 0x00422027 in D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13619)

# 3 0x0042D5E5 in D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe: main() at D:/пономарёв александр/clashofclans-main/clashofclans-main/main.cpp (188):

    186:     for (int i=0; i<count_pic; i++)
    187:     {
=>  188:         txDeleteDC(centrPic[i].pic);
    189:     }
    190: 

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txBuffer_Delete(HDC__**) at d:\codeblocks\mingw\include\txlib.h (10851):

  10849: $1  if (_TX_ARGUMENT_FAILED (dc)) return false;
  10850: $   if (                   !*dc)  return false;
=>10851: $   if (_TX_HDC_FAILED     (*dc)) return false;
  10852: 
  10853: $   if (!Win32::GetObjectType (Win32::GetCurrentObject (*dc, OBJ_BITMAP))) return false;

# 1 in bool {anonymous}::TX::txDeleteDC(HDC__**) at d:\codeblocks\mingw\include\txlib.h (13597):

  13595: 
  13596: $   HDC  dc = *pdc;
=>13597: $   bool ok = _txBuffer_Delete (pdc);
  13598: $   if (!ok) return false;
  13599: 

# 2 in bool {anonymous}::TX::txDeleteDC(HDC) at d:\codeblocks\mingw\include\txlib.h (13619):

  13617: bool txDeleteDC (HDC dc)
  13618:     {
=>13619: $1  return txDeleteDC (&dc);
  13620:     }
  13621: 

# 3 in int main() at D:\пономарёв александр\clashofclans-main\clashofclans-main\main.cpp (188):

    186:     for (int i=0; i<count_pic; i++)
    187:     {
=>  188:         txDeleteDC(centrPic[i].pic);
    189:     }
    190: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\codeblocks\mingw\include\txlib.h
Compiled:	Oct 30 2023 19:56:53, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 30 2023 19:57:13

Run file:	D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe
Directory:	D:\пономарёв александр\clashofclans-main\clashofclans-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe, файл: d:\codeblocks\mingw\include\txlib.h, строка: 10851, функция: bool {anonymous}::TX::_txBuffer_Delete(HDC__**),

Сообщение: Параметр "*dc" неверен. Возможно, этот холст не создан, или уже уничтожен, или не загрузилась картинка.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005082FC (32-bit), Flags: CMdRe0, Thread: 0x704 (Main), GetLastError(): 13 (Недопустимые данные). 

--------------------------------------------------
Стек вызовов:

# 0 0x0041075E in D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe: _txBuffer_Delete() at d:/codeblocks/mingw/include/txlib.h (10851)
# 1 0x00421DB7 in D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13597)
# 2 0x00422027 in D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13619)

# 3 0x0042D5E5 in D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe: main() at D:/пономарёв александр/clashofclans-main/clashofclans-main/main.cpp (188):

    186:     for (int i=0; i<count_pic; i++)
    187:     {
=>  188:         txDeleteDC(centrPic[i].pic);
    189:     }
    190: 

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txBuffer_Delete(HDC__**) at d:\codeblocks\mingw\include\txlib.h (10851):

  10849: $1  if (_TX_ARGUMENT_FAILED (dc)) return false;
  10850: $   if (                   !*dc)  return false;
=>10851: $   if (_TX_HDC_FAILED     (*dc)) return false;
  10852: 
  10853: $   if (!Win32::GetObjectType (Win32::GetCurrentObject (*dc, OBJ_BITMAP))) return false;

# 1 in bool {anonymous}::TX::txDeleteDC(HDC__**) at d:\codeblocks\mingw\include\txlib.h (13597):

  13595: 
  13596: $   HDC  dc = *pdc;
=>13597: $   bool ok = _txBuffer_Delete (pdc);
  13598: $   if (!ok) return false;
  13599: 

# 2 in bool {anonymous}::TX::txDeleteDC(HDC) at d:\codeblocks\mingw\include\txlib.h (13619):

  13617: bool txDeleteDC (HDC dc)
  13618:     {
=>13619: $1  return txDeleteDC (&dc);
  13620:     }
  13621: 

# 3 in int main() at D:\пономарёв александр\clashofclans-main\clashofclans-main\main.cpp (188):

    186:     for (int i=0; i<count_pic; i++)
    187:     {
=>  188:         txDeleteDC(centrPic[i].pic);
    189:     }
    190: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\codeblocks\mingw\include\txlib.h
Compiled:	Oct 30 2023 19:59:00, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 30 2023 19:59:19

Run file:	D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe
Directory:	D:\пономарёв александр\clashofclans-main\clashofclans-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe, файл: d:\codeblocks\mingw\include\txlib.h, строка: 10851, функция: bool {anonymous}::TX::_txBuffer_Delete(HDC__**),

Сообщение: Параметр "*dc" неверен. Возможно, этот холст не создан, или уже уничтожен, или не загрузилась картинка.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005082FC (32-bit), Flags: CMdRe0, Thread: 0x1628 (Main), GetLastError(): 13 (Недопустимые данные). 

--------------------------------------------------
Стек вызовов:

# 0 0x0041075E in D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe: _txBuffer_Delete() at d:/codeblocks/mingw/include/txlib.h (10851)
# 1 0x00421DB7 in D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13597)
# 2 0x00422027 in D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13619)

# 3 0x0042D5E5 in D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe: main() at D:/пономарёв александр/clashofclans-main/clashofclans-main/main.cpp (188):

    186:     for (int i=0; i<100; i++)
    187:     {
=>  188:         txDeleteDC(centrPic[i].pic);
    189:     }
    190: 

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txBuffer_Delete(HDC__**) at d:\codeblocks\mingw\include\txlib.h (10851):

  10849: $1  if (_TX_ARGUMENT_FAILED (dc)) return false;
  10850: $   if (                   !*dc)  return false;
=>10851: $   if (_TX_HDC_FAILED     (*dc)) return false;
  10852: 
  10853: $   if (!Win32::GetObjectType (Win32::GetCurrentObject (*dc, OBJ_BITMAP))) return false;

# 1 in bool {anonymous}::TX::txDeleteDC(HDC__**) at d:\codeblocks\mingw\include\txlib.h (13597):

  13595: 
  13596: $   HDC  dc = *pdc;
=>13597: $   bool ok = _txBuffer_Delete (pdc);
  13598: $   if (!ok) return false;
  13599: 

# 2 in bool {anonymous}::TX::txDeleteDC(HDC) at d:\codeblocks\mingw\include\txlib.h (13619):

  13617: bool txDeleteDC (HDC dc)
  13618:     {
=>13619: $1  return txDeleteDC (&dc);
  13620:     }
  13621: 

# 3 in int main() at D:\пономарёв александр\clashofclans-main\clashofclans-main\main.cpp (188):

    186:     for (int i=0; i<100; i++)
    187:     {
=>  188:         txDeleteDC(centrPic[i].pic);
    189:     }
    190: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\codeblocks\mingw\include\txlib.h
Compiled:	Oct 30 2023 20:02:04, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 30 2023 20:02:24

Run file:	D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe
Directory:	D:\пономарёв александр\clashofclans-main\clashofclans-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe, файл: d:\codeblocks\mingw\include\txlib.h, строка: 10851, функция: bool {anonymous}::TX::_txBuffer_Delete(HDC__**),

Сообщение: Параметр "*dc" неверен. Возможно, этот холст не создан, или уже уничтожен, или не загрузилась картинка.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005082FC (32-bit), Flags: CMdRe0, Thread: 0x8B4 (Main), GetLastError(): 13 (Недопустимые данные). 

--------------------------------------------------
Стек вызовов:

# 0 0x0041075E in D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe: _txBuffer_Delete() at d:/codeblocks/mingw/include/txlib.h (10851)
# 1 0x00421DB7 in D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13597)
# 2 0x00422027 in D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13619)

# 3 0x0042D5E5 in D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe: main() at D:/пономарёв александр/clashofclans-main/clashofclans-main/main.cpp (188):

    186:     for (int i=0; i<100; i++)
    187:     {
=>  188:         txDeleteDC(centrPic[i].pic);
    189:     }
    190: 

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txBuffer_Delete(HDC__**) at d:\codeblocks\mingw\include\txlib.h (10851):

  10849: $1  if (_TX_ARGUMENT_FAILED (dc)) return false;
  10850: $   if (                   !*dc)  return false;
=>10851: $   if (_TX_HDC_FAILED     (*dc)) return false;
  10852: 
  10853: $   if (!Win32::GetObjectType (Win32::GetCurrentObject (*dc, OBJ_BITMAP))) return false;

# 1 in bool {anonymous}::TX::txDeleteDC(HDC__**) at d:\codeblocks\mingw\include\txlib.h (13597):

  13595: 
  13596: $   HDC  dc = *pdc;
=>13597: $   bool ok = _txBuffer_Delete (pdc);
  13598: $   if (!ok) return false;
  13599: 

# 2 in bool {anonymous}::TX::txDeleteDC(HDC) at d:\codeblocks\mingw\include\txlib.h (13619):

  13617: bool txDeleteDC (HDC dc)
  13618:     {
=>13619: $1  return txDeleteDC (&dc);
  13620:     }
  13621: 

# 3 in int main() at D:\пономарёв александр\clashofclans-main\clashofclans-main\main.cpp (188):

    186:     for (int i=0; i<100; i++)
    187:     {
=>  188:         txDeleteDC(centrPic[i].pic);
    189:     }
    190: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\codeblocks\mingw\include\txlib.h
Compiled:	Oct 30 2023 20:05:05, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 30 2023 20:05:25

Run file:	D:\пономарёв александр\clashofclans-main\clashofclans-main\bin\Debug\clash.exe
Directory:	D:\пономарёв александр\clashofclans-main\clashofclans-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe, файл: d:\program\codeblocks\mingw\include\txlib.h, строка: 10851, функция: bool {anonymous}::TX::_txBuffer_Delete(HDC__**),

Сообщение: Параметр "*dc" неверен. Возможно, этот холст не создан, или уже уничтожен, или не загрузилась картинка.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005082FC (32-bit), Flags: CMdRe0, Thread: 0x2CF4 (Main), GetLastError(): 13 (Недопустимые данные). 

--------------------------------------------------
Стек вызовов:

# 0 0x0041075E in D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe: _txBuffer_Delete() at d:/program/codeblocks/mingw/include/txlib.h (10851)
# 1 0x00421DB7 in D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe: txDeleteDC() at d:/program/codeblocks/mingw/include/txlib.h (13597)
# 2 0x00422027 in D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe: txDeleteDC() at d:/program/codeblocks/mingw/include/txlib.h (13619)

# 3 0x0042D6B8 in D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe: main() at D:/проекты и другое/clashofrepository-main/main.cpp (218):

    216:     for (int i=0; i<count_pic; i++)
    217:     {
=>  218:         txDeleteDC(centrPic[i].pic);
    219:     }
    220: 

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txBuffer_Delete(HDC__**) at d:\program\codeblocks\mingw\include\txlib.h (10851):

  10849: $1  if (_TX_ARGUMENT_FAILED (dc)) return false;
  10850: $   if (                   !*dc)  return false;
=>10851: $   if (_TX_HDC_FAILED     (*dc)) return false;
  10852: 
  10853: $   if (!Win32::GetObjectType (Win32::GetCurrentObject (*dc, OBJ_BITMAP))) return false;

# 1 in bool {anonymous}::TX::txDeleteDC(HDC__**) at d:\program\codeblocks\mingw\include\txlib.h (13597):

  13595: 
  13596: $   HDC  dc = *pdc;
=>13597: $   bool ok = _txBuffer_Delete (pdc);
  13598: $   if (!ok) return false;
  13599: 

# 2 in bool {anonymous}::TX::txDeleteDC(HDC) at d:\program\codeblocks\mingw\include\txlib.h (13619):

  13617: bool txDeleteDC (HDC dc)
  13618:     {
=>13619: $1  return txDeleteDC (&dc);
  13620:     }
  13621: 

# 3 in int main() at D:\проекты и другое\clashofrepository-main\main.cpp (218):

    216:     for (int i=0; i<count_pic; i++)
    217:     {
=>  218:         txDeleteDC(centrPic[i].pic);
    219:     }
    220: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Oct 31 2023 20:57:31, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Oct 31 2023 20:57:36

Run file:	D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe, файл: d:\codeblocks\mingw\include\txlib.h, строка: 10851, функция: bool {anonymous}::TX::_txBuffer_Delete(HDC__**),

Сообщение: Параметр "*dc" неверен. Возможно, этот холст не создан, или уже уничтожен, или не загрузилась картинка.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005082FC (32-bit), Flags: CMdRe0, Thread: 0x21DC (Main), GetLastError(): 13 (Недопустимые данные). 

--------------------------------------------------
Стек вызовов:

# 0 0x0041075E in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: _txBuffer_Delete() at d:/codeblocks/mingw/include/txlib.h (10851)
# 1 0x00421DB7 in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13597)
# 2 0x00422027 in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13619)

# 3 0x0042D6D1 in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: main() at D:/пономарёв александр/clashofrepository-main/main.cpp (220):

    218:     for (int i=0; i<count_pic; i++)
    219:     {
=>  220:         txDeleteDC(centrPic[i].pic);
    221:     }
    222: 

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txBuffer_Delete(HDC__**) at d:\codeblocks\mingw\include\txlib.h (10851):

  10849: $1  if (_TX_ARGUMENT_FAILED (dc)) return false;
  10850: $   if (                   !*dc)  return false;
=>10851: $   if (_TX_HDC_FAILED     (*dc)) return false;
  10852: 
  10853: $   if (!Win32::GetObjectType (Win32::GetCurrentObject (*dc, OBJ_BITMAP))) return false;

# 1 in bool {anonymous}::TX::txDeleteDC(HDC__**) at d:\codeblocks\mingw\include\txlib.h (13597):

  13595: 
  13596: $   HDC  dc = *pdc;
=>13597: $   bool ok = _txBuffer_Delete (pdc);
  13598: $   if (!ok) return false;
  13599: 

# 2 in bool {anonymous}::TX::txDeleteDC(HDC) at d:\codeblocks\mingw\include\txlib.h (13619):

  13617: bool txDeleteDC (HDC dc)
  13618:     {
=>13619: $1  return txDeleteDC (&dc);
  13620:     }
  13621: 

# 3 in int main() at D:\пономарёв александр\clashofrepository-main\main.cpp (220):

    218:     for (int i=0; i<count_pic; i++)
    219:     {
=>  220:         txDeleteDC(centrPic[i].pic);
    221:     }
    222: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\codeblocks\mingw\include\txlib.h
Compiled:	Nov  3 2023 19:51:28, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Nov 03 2023 19:51:50

Run file:	D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\пономарёв александр\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe, файл: d:\codeblocks\mingw\include\txlib.h, строка: 10851, функция: bool {anonymous}::TX::_txBuffer_Delete(HDC__**),

Сообщение: Параметр "*dc" неверен. Возможно, этот холст не создан, или уже уничтожен, или не загрузилась картинка.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005082FC (32-bit), Flags: CMdRe0, Thread: 0x538 (Main), GetLastError(): 13 (Недопустимые данные). 

--------------------------------------------------
Стек вызовов:

# 0 0x0041075E in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: _txBuffer_Delete() at d:/codeblocks/mingw/include/txlib.h (10851)
# 1 0x00421DB7 in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13597)
# 2 0x00422027 in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13619)

# 3 0x0042D461 in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: main() at D:/пономарёв александр/clashofrepository-main/main.cpp (220):

    218:     for (int i=0; i<count_pic; i++)
    219:     {
=>  220:         txDeleteDC(centrPic[i].pic);
    221:     }
    222: 

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txBuffer_Delete(HDC__**) at d:\codeblocks\mingw\include\txlib.h (10851):

  10849: $1  if (_TX_ARGUMENT_FAILED (dc)) return false;
  10850: $   if (                   !*dc)  return false;
=>10851: $   if (_TX_HDC_FAILED     (*dc)) return false;
  10852: 
  10853: $   if (!Win32::GetObjectType (Win32::GetCurrentObject (*dc, OBJ_BITMAP))) return false;

# 1 in bool {anonymous}::TX::txDeleteDC(HDC__**) at d:\codeblocks\mingw\include\txlib.h (13597):

  13595: 
  13596: $   HDC  dc = *pdc;
=>13597: $   bool ok = _txBuffer_Delete (pdc);
  13598: $   if (!ok) return false;
  13599: 

# 2 in bool {anonymous}::TX::txDeleteDC(HDC) at d:\codeblocks\mingw\include\txlib.h (13619):

  13617: bool txDeleteDC (HDC dc)
  13618:     {
=>13619: $1  return txDeleteDC (&dc);
  13620:     }
  13621: 

# 3 in int main() at D:\пономарёв александр\clashofrepository-main\main.cpp (220):

    218:     for (int i=0; i<count_pic; i++)
    219:     {
=>  220:         txDeleteDC(centrPic[i].pic);
    221:     }
    222: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\codeblocks\mingw\include\txlib.h
Compiled:	Nov  3 2023 19:55:13, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Nov 03 2023 19:55:35

Run file:	D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\пономарёв александр\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe, файл: d:\codeblocks\mingw\include\txlib.h, строка: 10851, функция: bool {anonymous}::TX::_txBuffer_Delete(HDC__**),

Сообщение: Параметр "*dc" неверен. Возможно, этот холст не создан, или уже уничтожен, или не загрузилась картинка.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005082FC (32-bit), Flags: CMdRe0, Thread: 0x27D8 (Main), GetLastError(): 13 (Недопустимые данные). 

--------------------------------------------------
Стек вызовов:

# 0 0x0041075E in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: _txBuffer_Delete() at d:/codeblocks/mingw/include/txlib.h (10851)
# 1 0x00421DB7 in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13597)
# 2 0x00422027 in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13619)

# 3 0x0042D461 in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: main() at D:/пономарёв александр/clashofrepository-main/main.cpp (220):

    218:     for (int i=0; i<count_pic; i++)
    219:     {
=>  220:         txDeleteDC(centrPic[i].pic);
    221:     }
    222: 

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txBuffer_Delete(HDC__**) at d:\codeblocks\mingw\include\txlib.h (10851):

  10849: $1  if (_TX_ARGUMENT_FAILED (dc)) return false;
  10850: $   if (                   !*dc)  return false;
=>10851: $   if (_TX_HDC_FAILED     (*dc)) return false;
  10852: 
  10853: $   if (!Win32::GetObjectType (Win32::GetCurrentObject (*dc, OBJ_BITMAP))) return false;

# 1 in bool {anonymous}::TX::txDeleteDC(HDC__**) at d:\codeblocks\mingw\include\txlib.h (13597):

  13595: 
  13596: $   HDC  dc = *pdc;
=>13597: $   bool ok = _txBuffer_Delete (pdc);
  13598: $   if (!ok) return false;
  13599: 

# 2 in bool {anonymous}::TX::txDeleteDC(HDC) at d:\codeblocks\mingw\include\txlib.h (13619):

  13617: bool txDeleteDC (HDC dc)
  13618:     {
=>13619: $1  return txDeleteDC (&dc);
  13620:     }
  13621: 

# 3 in int main() at D:\пономарёв александр\clashofrepository-main\main.cpp (220):

    218:     for (int i=0; i<count_pic; i++)
    219:     {
=>  220:         txDeleteDC(centrPic[i].pic);
    221:     }
    222: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\codeblocks\mingw\include\txlib.h
Compiled:	Nov  3 2023 20:00:06, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Nov 03 2023 20:00:27

Run file:	D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\пономарёв александр\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe, файл: d:\codeblocks\mingw\include\txlib.h, строка: 10851, функция: bool {anonymous}::TX::_txBuffer_Delete(HDC__**),

Сообщение: Параметр "*dc" неверен. Возможно, этот холст не создан, или уже уничтожен, или не загрузилась картинка.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005082FC (32-bit), Flags: CMdRe0, Thread: 0x268 (Main), GetLastError(): 13 (Недопустимые данные). 

--------------------------------------------------
Стек вызовов:

# 0 0x0041075E in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: _txBuffer_Delete() at d:/codeblocks/mingw/include/txlib.h (10851)
# 1 0x00421DB7 in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13597)
# 2 0x00422027 in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: txDeleteDC() at d:/codeblocks/mingw/include/txlib.h (13619)

# 3 0x0042D461 in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: main() at D:/пономарёв александр/clashofrepository-main/main.cpp (220):

    218:     for (int i=0; i<count_pic; i++)
    219:     {
=>  220:         txDeleteDC(centrPic[i].pic);
    221:     }
    222: 

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txBuffer_Delete(HDC__**) at d:\codeblocks\mingw\include\txlib.h (10851):

  10849: $1  if (_TX_ARGUMENT_FAILED (dc)) return false;
  10850: $   if (                   !*dc)  return false;
=>10851: $   if (_TX_HDC_FAILED     (*dc)) return false;
  10852: 
  10853: $   if (!Win32::GetObjectType (Win32::GetCurrentObject (*dc, OBJ_BITMAP))) return false;

# 1 in bool {anonymous}::TX::txDeleteDC(HDC__**) at d:\codeblocks\mingw\include\txlib.h (13597):

  13595: 
  13596: $   HDC  dc = *pdc;
=>13597: $   bool ok = _txBuffer_Delete (pdc);
  13598: $   if (!ok) return false;
  13599: 

# 2 in bool {anonymous}::TX::txDeleteDC(HDC) at d:\codeblocks\mingw\include\txlib.h (13619):

  13617: bool txDeleteDC (HDC dc)
  13618:     {
=>13619: $1  return txDeleteDC (&dc);
  13620:     }
  13621: 

# 3 in int main() at D:\пономарёв александр\clashofrepository-main\main.cpp (220):

    218:     for (int i=0; i<count_pic; i++)
    219:     {
=>  220:         txDeleteDC(centrPic[i].pic);
    221:     }
    222: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\codeblocks\mingw\include\txlib.h
Compiled:	Nov  3 2023 20:14:47, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Nov 03 2023 20:15:07

Run file:	D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\пономарёв александр\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe, файл: d:\program\codeblocks\mingw\include\txlib.h, строка: 10851, функция: bool {anonymous}::TX::_txBuffer_Delete(HDC__**),

Сообщение: Параметр "*dc" неверен. Возможно, этот холст не создан, или уже уничтожен, или не загрузилась картинка.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005092FC (32-bit), Flags: CMdRe0, Thread: 0x467C (Main), GetLastError(): 13 (Недопустимые данные), errno: 22 (Invalid argument), _doserrno: 2 (No such file or directory). 

--------------------------------------------------
Стек вызовов:

# 0 0x0041075E in D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe: _txBuffer_Delete() at d:/program/codeblocks/mingw/include/txlib.h (10851)
# 1 0x00421DB7 in D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe: txDeleteDC() at d:/program/codeblocks/mingw/include/txlib.h (13597)
# 2 0x00422027 in D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe: txDeleteDC() at d:/program/codeblocks/mingw/include/txlib.h (13619)

# 3 0x0042D89F in D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe: main() at D:/проекты и другое/clashofrepository-main/main.cpp (249):

    247:     for (int i=0; i<count_pic; i++)
    248:     {
=>  249:         txDeleteDC(centrPic[i].pic);
    250:     }
    251: 

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txBuffer_Delete(HDC__**) at d:\program\codeblocks\mingw\include\txlib.h (10851):

  10849: $1  if (_TX_ARGUMENT_FAILED (dc)) return false;
  10850: $   if (                   !*dc)  return false;
=>10851: $   if (_TX_HDC_FAILED     (*dc)) return false;
  10852: 
  10853: $   if (!Win32::GetObjectType (Win32::GetCurrentObject (*dc, OBJ_BITMAP))) return false;

# 1 in bool {anonymous}::TX::txDeleteDC(HDC__**) at d:\program\codeblocks\mingw\include\txlib.h (13597):

  13595: 
  13596: $   HDC  dc = *pdc;
=>13597: $   bool ok = _txBuffer_Delete (pdc);
  13598: $   if (!ok) return false;
  13599: 

# 2 in bool {anonymous}::TX::txDeleteDC(HDC) at d:\program\codeblocks\mingw\include\txlib.h (13619):

  13617: bool txDeleteDC (HDC dc)
  13618:     {
=>13619: $1  return txDeleteDC (&dc);
  13620:     }
  13621: 

# 3 in int main() at D:\проекты и другое\clashofrepository-main\main.cpp (249):

    247:     for (int i=0; i<count_pic; i++)
    248:     {
=>  249:         txDeleteDC(centrPic[i].pic);
    250:     }
    251: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Nov  6 2023 19:04:19, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Nov 06 2023 19:04:25

Run file:	D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe, файл: d:\program\codeblocks\mingw\include\txlib.h, строка: 10851, функция: bool {anonymous}::TX::_txBuffer_Delete(HDC__**),

Сообщение: Параметр "*dc" неверен. Возможно, этот холст не создан, или уже уничтожен, или не загрузилась картинка.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005092FC (32-bit), Flags: CMdRe0, Thread: 0x3588 (Main), GetLastError(): 13 (Недопустимые данные), errno: 22 (Invalid argument), _doserrno: 2 (No such file or directory). 

--------------------------------------------------
Стек вызовов:

# 0 0x0041075E in D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe: _txBuffer_Delete() at d:/program/codeblocks/mingw/include/txlib.h (10851)
# 1 0x00421DB7 in D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe: txDeleteDC() at d:/program/codeblocks/mingw/include/txlib.h (13597)
# 2 0x00422027 in D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe: txDeleteDC() at d:/program/codeblocks/mingw/include/txlib.h (13619)

# 3 0x0042D88C in D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe: main() at D:/проекты и другое/clashofrepository-main/main.cpp (249):

    247:     for (int i=0; i<count_pic; i++)
    248:     {
=>  249:         txDeleteDC(centrPic[100].pic);
    250:     }
    251: 

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txBuffer_Delete(HDC__**) at d:\program\codeblocks\mingw\include\txlib.h (10851):

  10849: $1  if (_TX_ARGUMENT_FAILED (dc)) return false;
  10850: $   if (                   !*dc)  return false;
=>10851: $   if (_TX_HDC_FAILED     (*dc)) return false;
  10852: 
  10853: $   if (!Win32::GetObjectType (Win32::GetCurrentObject (*dc, OBJ_BITMAP))) return false;

# 1 in bool {anonymous}::TX::txDeleteDC(HDC__**) at d:\program\codeblocks\mingw\include\txlib.h (13597):

  13595: 
  13596: $   HDC  dc = *pdc;
=>13597: $   bool ok = _txBuffer_Delete (pdc);
  13598: $   if (!ok) return false;
  13599: 

# 2 in bool {anonymous}::TX::txDeleteDC(HDC) at d:\program\codeblocks\mingw\include\txlib.h (13619):

  13617: bool txDeleteDC (HDC dc)
  13618:     {
=>13619: $1  return txDeleteDC (&dc);
  13620:     }
  13621: 

# 3 in int main() at D:\проекты и другое\clashofrepository-main\main.cpp (249):

    247:     for (int i=0; i<count_pic; i++)
    248:     {
=>  249:         txDeleteDC(centrPic[100].pic);
    250:     }
    251: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Nov  6 2023 19:05:05, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Nov 06 2023 19:05:10

Run file:	D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe, файл: d:\program\codeblocks\mingw\include\txlib.h, строка: 10851, функция: bool {anonymous}::TX::_txBuffer_Delete(HDC__**),

Сообщение: Параметр "*dc" неверен. Возможно, этот холст не создан, или уже уничтожен, или не загрузилась картинка.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005092FC (32-bit), Flags: CMdRe0, Thread: 0x4600 (Main), GetLastError(): 13 (Недопустимые данные), errno: 22 (Invalid argument), _doserrno: 2 (No such file or directory). 

--------------------------------------------------
Стек вызовов:

# 0 0x0041075E in D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe: _txBuffer_Delete() at d:/program/codeblocks/mingw/include/txlib.h (10851)
# 1 0x00421DB7 in D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe: txDeleteDC() at d:/program/codeblocks/mingw/include/txlib.h (13597)
# 2 0x00422027 in D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe: txDeleteDC() at d:/program/codeblocks/mingw/include/txlib.h (13619)

# 3 0x0042D8A1 in D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe: main() at D:/проекты и другое/clashofrepository-main/main.cpp (246):

    244:     {
    245:         txDeleteDC(menuPic[i].pic);
=>  246:         txDeleteDC(centrPic[i].pic);
    247:     }
    248: 

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::_txBuffer_Delete(HDC__**) at d:\program\codeblocks\mingw\include\txlib.h (10851):

  10849: $1  if (_TX_ARGUMENT_FAILED (dc)) return false;
  10850: $   if (                   !*dc)  return false;
=>10851: $   if (_TX_HDC_FAILED     (*dc)) return false;
  10852: 
  10853: $   if (!Win32::GetObjectType (Win32::GetCurrentObject (*dc, OBJ_BITMAP))) return false;

# 1 in bool {anonymous}::TX::txDeleteDC(HDC__**) at d:\program\codeblocks\mingw\include\txlib.h (13597):

  13595: 
  13596: $   HDC  dc = *pdc;
=>13597: $   bool ok = _txBuffer_Delete (pdc);
  13598: $   if (!ok) return false;
  13599: 

# 2 in bool {anonymous}::TX::txDeleteDC(HDC) at d:\program\codeblocks\mingw\include\txlib.h (13619):

  13617: bool txDeleteDC (HDC dc)
  13618:     {
=>13619: $1  return txDeleteDC (&dc);
  13620:     }
  13621: 

# 3 in int main() at D:\проекты и другое\clashofrepository-main\main.cpp (246):

    244:     {
    245:         txDeleteDC(menuPic[i].pic);
=>  246:         txDeleteDC(centrPic[i].pic);
    247:     }
    248: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Nov  6 2023 19:05:58, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Nov 06 2023 19:06:02

Run file:	D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe, файл: d:\program\codeblocks\mingw\include\txlib.h, строка: 13628, функция: bool {anonymous}::TX::txBitBlt(HDC, double, double, double, double, HDC, double, double, unsigned int),

Сообщение: Параметр "sourceImage" неверен. Возможно, этот холст не создан, или уже уничтожен, или не загрузилась картинка.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005072FC (32-bit), Flags: CMdRe0, Thread: 0x44A0 (Main), GetLastError(): 13 (Недопустимые данные). 

--------------------------------------------------
Стек вызовов:

# 0 0x004221C3 in D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe: txBitBlt() at d:/program/codeblocks/mingw/include/txlib.h (13628)

# 1 0x0042C75B in D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe: main() at D:/проекты и другое/cosmic-main/main.cpp (163):

    161:         if(PAGE == "Menu")
    162:         {
=>  163:             txBitBlt(txDC(), 0, 0, 1000, 625, menu);
    164:             btn_start.draw();
    165: 

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::txBitBlt(HDC, double, double, double, double, HDC, double, double, unsigned int) at d:\program\codeblocks\mingw\include\txlib.h (13628):

  13626:     {
  13627: $1  if (_TX_HDC_FAILED (destImage))   return false;
=>13628: $   if (_TX_HDC_FAILED (sourceImage)) return false;
  13629: 
  13630: $   POINT size = txGetExtent (sourceImage);

# 1 in int main() at D:\проекты и другое\cosmic-main\main.cpp (163):

    161:         if(PAGE == "Menu")
    162:         {
=>  163:             txBitBlt(txDC(), 0, 0, 1000, 625, menu);
    164:             btn_start.draw();
    165: 

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Nov 17 2023 19:33:54, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Nov 17 2023 19:33:59

Run file:	D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib сообщает:

Программа: D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe, файл: d:\program\codeblocks\mingw\include\txlib.h, строка: 13678, функция: bool {anonymous}::TX::txTransparentBlt(HDC, double, double, double, double, HDC, double, double, COLORREF),

Сообщение: Прямоугольник копируемой области {0, 0, 1300, 1047} не полностью лежит внутри изображения-источника {0, 0, 1250, 940}, функция txTransparentBlt() работать не будет.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005082FC (32-bit), Flags: CMdRe0, Thread: 0x3E7C (Main), GetLastError(): 13 (Недопустимые данные). 
From: d:\program\codeblocks\mingw\include\txlib.h (13677) bool {anonymous}::TX::txTransparentBlt(HDC, double, double, double, double, HDC, double, double, COLORREF).

--------------------------------------------------
Стек вызовов:

# 0 0x004228EC in D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe: txTransparentBlt() at d:/program/codeblocks/mingw/include/txlib.h (13678)

# 1 0x0042CC5E in D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe: main() at D:/проекты и другое/clashofrepository-main/main.cpp (124):

    122:         txClear();
    123:         Fon = txLoadImage ("pictures/Fon.bmp");
=>  124:         txTransparentBlt (txDC(), 0, 0, 1300, 1047, Fon);
    125: 
    126:         for(int i=0; i<count_btn; i++)

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::txTransparentBlt(HDC, double, double, double, double, HDC, double, double, COLORREF) at d:\program\codeblocks\mingw\include\txlib.h (13677):

  13675:         {
  13676: $       SetLastError (ERROR_INVALID_DATA);
=>13677: $       TX_ERROR ("Прямоугольник копируемой области {%g, %g, %g, %g} не полностью лежит внутри изображения-источника {%d, %d, %d, %d}, "
  13678:                   "функция txTransparentBlt() работать не будет.", xSource, ySource, xSource + width, ySource + height, 0, 0, (int) size.x, (int) size.y);
  13679:         }

# 1 in int main() at D:\проекты и другое\clashofrepository-main\main.cpp (124):

    122:         txClear();
    123:         Fon = txLoadImage ("pictures/Fon.bmp");
=>  124:         txTransparentBlt (txDC(), 0, 0, 1300, 1047, Fon);
    125: 
    126:         for(int i=0; i<count_btn; i++)

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Nov 17 2023 19:40:42, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Nov 17 2023 19:40:46

Run file:	D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib сообщает:

Программа: D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe, файл: d:\program\codeblocks\mingw\include\txlib.h, строка: 13678, функция: bool {anonymous}::TX::txTransparentBlt(HDC, double, double, double, double, HDC, double, double, COLORREF),

Сообщение: Прямоугольник копируемой области {0, 0, 1300, 1047} не полностью лежит внутри изображения-источника {0, 0, 1250, 940}, функция txTransparentBlt() работать не будет.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005082FC (32-bit), Flags: CMdRe0, Thread: 0x2294 (Main), GetLastError(): 13 (Недопустимые данные). 
From: d:\program\codeblocks\mingw\include\txlib.h (13677) bool {anonymous}::TX::txTransparentBlt(HDC, double, double, double, double, HDC, double, double, COLORREF).

--------------------------------------------------
Стек вызовов:

# 0 0x004228EC in D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe: txTransparentBlt() at d:/program/codeblocks/mingw/include/txlib.h (13678)

# 1 0x0042CC5E in D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe: main() at D:/проекты и другое/clashofrepository-main/main.cpp (124):

    122:         txClear();
    123:         Fon = txLoadImage ("pictures/Fon.bmp");
=>  124:         txTransparentBlt (txDC(), 0, 0, 1300, 1047, Fon);
    125: 
    126:         for(int i=0; i<count_btn; i++)

--------------------------------------------------
Стек вызовов TX:

# 0 in bool {anonymous}::TX::txTransparentBlt(HDC, double, double, double, double, HDC, double, double, COLORREF) at d:\program\codeblocks\mingw\include\txlib.h (13677):

  13675:         {
  13676: $       SetLastError (ERROR_INVALID_DATA);
=>13677: $       TX_ERROR ("Прямоугольник копируемой области {%g, %g, %g, %g} не полностью лежит внутри изображения-источника {%d, %d, %d, %d}, "
  13678:                   "функция txTransparentBlt() работать не будет.", xSource, ySource, xSource + width, ySource + height, 0, 0, (int) size.x, (int) size.y);
  13679:         }

# 1 in int main() at D:\проекты и другое\clashofrepository-main\main.cpp (124):

    122:         txClear();
    123:         Fon = txLoadImage ("pictures/Fon.bmp");
=>  124:         txTransparentBlt (txDC(), 0, 0, 1300, 1047, Fon);
    125: 
    126:         for(int i=0; i<count_btn; i++)

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Nov 17 2023 19:40:42, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Nov 17 2023 19:41:04

Run file:	D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe,

ВНЕЗАПНО: Исключение С++, вызванное оператором throw.

#1: Исключение EXCEPTION_CPP_MSC (0xE06D7363) при выполнении кода по адресу 0x76DAF932 в функции RaiseException() в модуле C:\WINDOWS\System32\KERNELBASE.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

Ой, всё (EXCEPTION_NONCONTINUABLE).

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005092FC (32-bit), Flags: CMdRE0, Thread: 0x2A48, GetLastError(): 127 (Не найдена указанная процедура). 

--------------------------------------------------
Стек вызовов:

# 0 0x76DAF932 in C:\WINDOWS\System32\KERNELBASE.dll: RaiseException()
# 1 0x5703AE86 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 2 0x56FE8F16 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 3 0x56FE941E in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 4 0x56F283FD in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 5 0x56F25811 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 6 0x56FBF93A in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 7 0x56FBF012 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 8 0x56FBDAB0 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 9 0x56F29C13 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
#10 0x56E9924C in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
#11 0x56FE8B48 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
#12 0x56FE8C0C in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
#13 0x777C2B66 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlIpv6AddressToStringA()
#14 0x7779DD72 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlActivateActivationContextUnsafeFast()
#15 0x777A1873 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
#16 0x777A19E1 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
#17 0x777A2285 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlIsCriticalSectionLockedByThread()
#18 0x7779E2A2 in C:\WINDOWS\SYSTEM32\ntdll.dll: LdrLoadDll()
#19 0x7779DEE6 in C:\WINDOWS\SYSTEM32\ntdll.dll: LdrLoadDll()
#20 0x76D8A206 in C:\WINDOWS\System32\KERNELBASE.dll: LoadLibraryExW()
#21 0x762210D6 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#22 0x7622105F in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#23 0x76220E74 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#24 0x7621FD11 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#25 0x7623882E in C:\WINDOWS\System32\combase.dll: RoGetActivationFactory()
#26 0x76206892 in C:\WINDOWS\System32\combase.dll: CoGetClassObject()
#27 0x76204B85 in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#28 0x76212345 in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#29 0x7620447F in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#30 0x76203C7A in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#31 0x76282CF5 in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#32 0x76282BAD in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#33 0x76282B31 in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#34 0x7621230D in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#35 0x76212B4D in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#36 0x76212314 in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#37 0x7623A5A2 in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#38 0x76239811 in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#39 0x7623957E in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#40 0x75B9D4A0 in C:\WINDOWS\System32\SHELL32.dll: Ordinal866()
#41 0x75C65523 in C:\WINDOWS\System32\SHELL32.dll: StateRepoNewMenuCache_EnsureCacheAsync()
#42 0x75C16C84 in C:\WINDOWS\System32\SHELL32.dll: Ordinal660()
#43 0x75C17277 in C:\WINDOWS\System32\SHELL32.dll: Ordinal660()
#44 0x75B819C6 in C:\WINDOWS\System32\SHELL32.dll: SHCreateDefaultContextMenu()
#45 0x75B826A6 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#46 0x75B81ED5 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#47 0x75B81DB2 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#48 0x75B81B6F in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#49 0x74B64510 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#50 0x74B64421 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#51 0x74F028AE in C:\WINDOWS\SYSTEM32\windows.storage.dll: ShellExecuteExW()
#52 0x74C54E00 in C:\WINDOWS\SYSTEM32\windows.storage.dll: Ordinal2009()
#53 0x74B64375 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#54 0x5DCC34DA in C:\WINDOWS\system32\explorerframe.dll: Ordinal130()
#55 0x74A8C088 in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#56 0x74A8BCAC in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#57 0x74A8BA6E in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#58 0x776DC6E9 in C:\WINDOWS\System32\shcore.dll: Ordinal245()
#59 0x777B9680 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlUnwind()
#60 0x7778602A in C:\WINDOWS\SYSTEM32\ntdll.dll: TpCallbackIndependent()
#61 0x7710FCC9 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Dec  1 2023 20:51:41, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Dec 01 2023 20:51:50

Run file:	D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe,

ВНЕЗАПНО: #2 (0x80010108) при выполнении кода по адресу 0x76DAF932 в функции RaiseException() в модуле C:\WINDOWS\System32\KERNELBASE.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

Ой, всё (EXCEPTION_NONCONTINUABLE).

#2: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005092FC (32-bit), Flags: CMdrE0, Thread: 0x1CC0. 

--------------------------------------------------
Стек вызовов:

# 0 0x76DAF932 in C:\WINDOWS\System32\KERNELBASE.dll: RaiseException()
# 1 0x759D32BE in C:\WINDOWS\System32\RPCRT4.dll: RpcRaiseException()
# 2 0x761E035B in C:\WINDOWS\System32\combase.dll: CoGetCurrentLogicalThreadId()
# 3 0x759C6B23 in C:\WINDOWS\System32\RPCRT4.dll: NdrClientCall2()
# 4 0x762AECA0 in C:\WINDOWS\System32\combase.dll: ObjectStublessClient32()
# 5 0x762A6C3F in C:\WINDOWS\System32\combase.dll: InternalCoUnregisterDisconnectCallback()
# 6 0x761E8CD0 in C:\WINDOWS\System32\combase.dll: CStdStubBuffer_QueryInterface()
# 7 0x762A18FE in C:\WINDOWS\System32\combase.dll: InternalCoUnregisterDisconnectCallback()
# 8 0x7624E79C in C:\WINDOWS\System32\combase.dll: HMENU_UserFree()
# 9 0x7624D1DE in C:\WINDOWS\System32\combase.dll: CoMarshalInterface()
#10 0x776D3C9B in C:\WINDOWS\System32\shcore.dll: IUnknown_Set()
#11 0x74B70582 in C:\WINDOWS\SYSTEM32\windows.storage.dll: Global_WindowsStorage_fIconCacheIsValid()
#12 0x776D6533 in C:\WINDOWS\System32\shcore.dll: IUnknown_SetSite()
#13 0x5DCC4545 in C:\WINDOWS\system32\explorerframe.dll: Ordinal130()
#14 0x5DCC386C in C:\WINDOWS\system32\explorerframe.dll: Ordinal130()
#15 0x74A8C088 in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#16 0x74A8BCAC in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#17 0x74A8BA6E in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#18 0x776DC6E9 in C:\WINDOWS\System32\shcore.dll: Ordinal245()
#19 0x777B9680 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlUnwind()
#20 0x7778602A in C:\WINDOWS\SYSTEM32\ntdll.dll: TpCallbackIndependent()
#21 0x7710FCC9 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
#22 0x777B7C6E in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
#23 0x777B7C3E in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Dec  1 2023 20:51:41, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Dec 01 2023 20:51:49

Run file:	D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe,

ВНЕЗАПНО: #2 (0x80010108) при выполнении кода по адресу 0x76DAF932 в функции RaiseException() в модуле C:\WINDOWS\System32\KERNELBASE.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

Ой, всё (EXCEPTION_NONCONTINUABLE).

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#3: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005092FC (32-bit), Flags: CMdrE0, Thread: 0x1CC0. 

--------------------------------------------------
Стек вызовов:

# 0 0x76DAF932 in C:\WINDOWS\System32\KERNELBASE.dll: RaiseException()
# 1 0x759D32BE in C:\WINDOWS\System32\RPCRT4.dll: RpcRaiseException()
# 2 0x761E035B in C:\WINDOWS\System32\combase.dll: CoGetCurrentLogicalThreadId()
# 3 0x759C6B23 in C:\WINDOWS\System32\RPCRT4.dll: NdrClientCall2()
# 4 0x762AECA0 in C:\WINDOWS\System32\combase.dll: ObjectStublessClient32()
# 5 0x762A6C3F in C:\WINDOWS\System32\combase.dll: InternalCoUnregisterDisconnectCallback()
# 6 0x761E8CD0 in C:\WINDOWS\System32\combase.dll: CStdStubBuffer_QueryInterface()
# 7 0x762A18FE in C:\WINDOWS\System32\combase.dll: InternalCoUnregisterDisconnectCallback()
# 8 0x7624E79C in C:\WINDOWS\System32\combase.dll: HMENU_UserFree()
# 9 0x7624D1DE in C:\WINDOWS\System32\combase.dll: CoMarshalInterface()
#10 0x776D3C9B in C:\WINDOWS\System32\shcore.dll: IUnknown_Set()
#11 0x74B70582 in C:\WINDOWS\SYSTEM32\windows.storage.dll: Global_WindowsStorage_fIconCacheIsValid()
#12 0x776D6533 in C:\WINDOWS\System32\shcore.dll: IUnknown_SetSite()
#13 0x5DCC4545 in C:\WINDOWS\system32\explorerframe.dll: Ordinal130()
#14 0x5DCC386C in C:\WINDOWS\system32\explorerframe.dll: Ordinal130()
#15 0x74A8C088 in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#16 0x74A8BCAC in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#17 0x74A8BA6E in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#18 0x776DC6E9 in C:\WINDOWS\System32\shcore.dll: Ordinal245()
#19 0x777B9680 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlUnwind()
#20 0x7778602A in C:\WINDOWS\SYSTEM32\ntdll.dll: TpCallbackIndependent()
#21 0x7710FCC9 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()
#22 0x777B7C6E in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()
#23 0x777B7C3E in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlGetAppContainerNamedObjectPath()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Dec  1 2023 20:51:41, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Dec 01 2023 20:51:49

Run file:	D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe,

ВНЕЗАПНО: Исключение С++, вызванное оператором throw.

#1: Исключение EXCEPTION_CPP_MSC (0xE06D7363) при выполнении кода по адресу 0x7615F932 в функции RaiseException() в модуле C:\WINDOWS\System32\KERNELBASE.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

Ой, всё (EXCEPTION_NONCONTINUABLE).

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005092FC (32-bit), Flags: CMdRE0, Thread: 0xB6C, GetLastError(): 127 (Не найдена указанная процедура). 

--------------------------------------------------
Стек вызовов:

# 0 0x7615F932 in C:\WINDOWS\System32\KERNELBASE.dll: RaiseException()
# 1 0x5CD6AE86 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 2 0x5CD18F16 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 3 0x5CD1941E in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 4 0x5CC583FD in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 5 0x5CC55811 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 6 0x5CCEF93A in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 7 0x5CCEF012 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 8 0x5CCEDAB0 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 9 0x5CC59C13 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
#10 0x5CBC924C in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
#11 0x5CD18B48 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
#12 0x5CD18C0C in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
#13 0x770F2B66 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlIpv6AddressToStringA()
#14 0x770CDD72 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlActivateActivationContextUnsafeFast()
#15 0x770D1873 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
#16 0x770D19E1 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
#17 0x770D2285 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlIsCriticalSectionLockedByThread()
#18 0x770CE2A2 in C:\WINDOWS\SYSTEM32\ntdll.dll: LdrLoadDll()
#19 0x770CDEE6 in C:\WINDOWS\SYSTEM32\ntdll.dll: LdrLoadDll()
#20 0x7613A206 in C:\WINDOWS\System32\KERNELBASE.dll: LoadLibraryExW()
#21 0x769710D6 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#22 0x7697105F in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#23 0x76970E74 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#24 0x7696FD11 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#25 0x7698882E in C:\WINDOWS\System32\combase.dll: RoGetActivationFactory()
#26 0x76956892 in C:\WINDOWS\System32\combase.dll: CoGetClassObject()
#27 0x76954B85 in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#28 0x76962345 in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#29 0x7695447F in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#30 0x76953C7A in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#31 0x769D2CF5 in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#32 0x769D2BAD in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#33 0x769D2B31 in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#34 0x7696230D in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#35 0x76962B4D in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#36 0x76962314 in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#37 0x7698A5A2 in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#38 0x76989811 in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#39 0x7698957E in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#40 0x75AED4A0 in C:\WINDOWS\System32\SHELL32.dll: Ordinal866()
#41 0x75BB5523 in C:\WINDOWS\System32\SHELL32.dll: StateRepoNewMenuCache_EnsureCacheAsync()
#42 0x75B66C84 in C:\WINDOWS\System32\SHELL32.dll: Ordinal660()
#43 0x75B67277 in C:\WINDOWS\System32\SHELL32.dll: Ordinal660()
#44 0x75AD19C6 in C:\WINDOWS\System32\SHELL32.dll: SHCreateDefaultContextMenu()
#45 0x75AD26A6 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#46 0x75AD1ED5 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#47 0x75AD1DB2 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#48 0x75AD1B6F in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#49 0x74614510 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#50 0x74614421 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#51 0x749B28AE in C:\WINDOWS\SYSTEM32\windows.storage.dll: ShellExecuteExW()
#52 0x74704E00 in C:\WINDOWS\SYSTEM32\windows.storage.dll: Ordinal2009()
#53 0x74614375 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#54 0x5E5A34DA in C:\WINDOWS\system32\explorerframe.dll: Ordinal130()
#55 0x7453C088 in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#56 0x7453BCAC in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#57 0x7453BA6E in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#58 0x7652C6E9 in C:\WINDOWS\System32\shcore.dll: Ordinal245()
#59 0x770E9680 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlUnwind()
#60 0x770B602A in C:\WINDOWS\SYSTEM32\ntdll.dll: TpCallbackIndependent()
#61 0x7581FCC9 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Dec  4 2023 18:45:07, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Dec 04 2023 18:45:16

Run file:	D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe,

ВНЕЗАПНО: Исключение С++, вызванное оператором throw.

#1: Исключение EXCEPTION_CPP_MSC (0xE06D7363) при выполнении кода по адресу 0x7615F932 в функции RaiseException() в модуле C:\WINDOWS\System32\KERNELBASE.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

Ой, всё (EXCEPTION_NONCONTINUABLE).

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005092FC (32-bit), Flags: CMdRE0, Thread: 0x4A50, GetLastError(): 127 (Не найдена указанная процедура). 

--------------------------------------------------
Стек вызовов:

# 0 0x7615F932 in C:\WINDOWS\System32\KERNELBASE.dll: RaiseException()
# 1 0x5CB8AE86 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 2 0x5CB38F16 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 3 0x5CB3941E in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 4 0x5CA783FD in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 5 0x5CA75811 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 6 0x5CB0F93A in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 7 0x5CB0F012 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 8 0x5CB0DAB0 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 9 0x5CA79C13 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
#10 0x5C9E924C in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
#11 0x5CB38B48 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
#12 0x5CB38C0C in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
#13 0x770F2B66 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlIpv6AddressToStringA()
#14 0x770CDD72 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlActivateActivationContextUnsafeFast()
#15 0x770D1873 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
#16 0x770D19E1 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
#17 0x770D2285 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlIsCriticalSectionLockedByThread()
#18 0x770CE2A2 in C:\WINDOWS\SYSTEM32\ntdll.dll: LdrLoadDll()
#19 0x770CDEE6 in C:\WINDOWS\SYSTEM32\ntdll.dll: LdrLoadDll()
#20 0x7613A206 in C:\WINDOWS\System32\KERNELBASE.dll: LoadLibraryExW()
#21 0x769710D6 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#22 0x7697105F in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#23 0x76970E74 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#24 0x7696FD11 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#25 0x7698882E in C:\WINDOWS\System32\combase.dll: RoGetActivationFactory()
#26 0x76956892 in C:\WINDOWS\System32\combase.dll: CoGetClassObject()
#27 0x76954B85 in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#28 0x76962345 in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#29 0x7695447F in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#30 0x76953C7A in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#31 0x769D2CF5 in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#32 0x769D2BAD in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#33 0x769D2B31 in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#34 0x7696230D in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#35 0x76962B4D in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#36 0x76962314 in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#37 0x7698A5A2 in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#38 0x76989811 in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#39 0x7698957E in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#40 0x75AED4A0 in C:\WINDOWS\System32\SHELL32.dll: Ordinal866()
#41 0x75BB5523 in C:\WINDOWS\System32\SHELL32.dll: StateRepoNewMenuCache_EnsureCacheAsync()
#42 0x75B66C84 in C:\WINDOWS\System32\SHELL32.dll: Ordinal660()
#43 0x75B67277 in C:\WINDOWS\System32\SHELL32.dll: Ordinal660()
#44 0x75AD19C6 in C:\WINDOWS\System32\SHELL32.dll: SHCreateDefaultContextMenu()
#45 0x75AD26A6 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#46 0x75AD1ED5 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#47 0x75AD1DB2 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#48 0x75AD1B6F in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#49 0x74614510 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#50 0x74614421 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#51 0x749B28AE in C:\WINDOWS\SYSTEM32\windows.storage.dll: ShellExecuteExW()
#52 0x74704E00 in C:\WINDOWS\SYSTEM32\windows.storage.dll: Ordinal2009()
#53 0x74614375 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#54 0x5E5A34DA in C:\WINDOWS\system32\explorerframe.dll: Ordinal130()
#55 0x7453C088 in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#56 0x7453BCAC in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#57 0x7453BA6E in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#58 0x7652C6E9 in C:\WINDOWS\System32\shcore.dll: Ordinal245()
#59 0x770E9680 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlUnwind()
#60 0x770B602A in C:\WINDOWS\SYSTEM32\ntdll.dll: TpCallbackIndependent()
#61 0x7581FCC9 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Dec  4 2023 18:49:44, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Dec 04 2023 18:49:49

Run file:	D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe,

ВНЕЗАПНО: Исключение С++, вызванное оператором throw.

#1: Исключение EXCEPTION_CPP_MSC (0xE06D7363) при выполнении кода по адресу 0x7615F932 в функции RaiseException() в модуле C:\WINDOWS\System32\KERNELBASE.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

Ой, всё (EXCEPTION_NONCONTINUABLE).

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005092FC (32-bit), Flags: CMdRE0, Thread: 0x3CC, GetLastError(): 127 (Не найдена указанная процедура). 

--------------------------------------------------
Стек вызовов:

# 0 0x7615F932 in C:\WINDOWS\System32\KERNELBASE.dll: RaiseException()
# 1 0x5CE1AE86 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 2 0x5CDC8F16 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 3 0x5CDC941E in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 4 0x5CD083FD in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 5 0x5CD05811 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 6 0x5CD9F93A in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 7 0x5CD9F012 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 8 0x5CD9DAB0 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 9 0x5CD09C13 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
#10 0x5CC7924C in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
#11 0x5CDC8B48 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
#12 0x5CDC8C0C in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
#13 0x770F2B66 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlIpv6AddressToStringA()
#14 0x770CDD72 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlActivateActivationContextUnsafeFast()
#15 0x770D1873 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
#16 0x770D19E1 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
#17 0x770D2285 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlIsCriticalSectionLockedByThread()
#18 0x770CE2A2 in C:\WINDOWS\SYSTEM32\ntdll.dll: LdrLoadDll()
#19 0x770CDEE6 in C:\WINDOWS\SYSTEM32\ntdll.dll: LdrLoadDll()
#20 0x7613A206 in C:\WINDOWS\System32\KERNELBASE.dll: LoadLibraryExW()
#21 0x769710D6 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#22 0x7697105F in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#23 0x76970E74 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#24 0x7696FD11 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#25 0x7698882E in C:\WINDOWS\System32\combase.dll: RoGetActivationFactory()
#26 0x76956892 in C:\WINDOWS\System32\combase.dll: CoGetClassObject()
#27 0x76954B85 in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#28 0x76962345 in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#29 0x7695447F in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#30 0x76953C7A in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#31 0x769D2CF5 in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#32 0x769D2BAD in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#33 0x769D2B31 in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#34 0x7696230D in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#35 0x76962B4D in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#36 0x76962314 in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#37 0x7698A5A2 in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#38 0x76989811 in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#39 0x7698957E in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#40 0x75AED4A0 in C:\WINDOWS\System32\SHELL32.dll: Ordinal866()
#41 0x75BB5523 in C:\WINDOWS\System32\SHELL32.dll: StateRepoNewMenuCache_EnsureCacheAsync()
#42 0x75B66C84 in C:\WINDOWS\System32\SHELL32.dll: Ordinal660()
#43 0x75B67277 in C:\WINDOWS\System32\SHELL32.dll: Ordinal660()
#44 0x75AD19C6 in C:\WINDOWS\System32\SHELL32.dll: SHCreateDefaultContextMenu()
#45 0x75AD26A6 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#46 0x75AD1ED5 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#47 0x75AD1DB2 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#48 0x75AD1B6F in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#49 0x74614510 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#50 0x74614421 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#51 0x749B28AE in C:\WINDOWS\SYSTEM32\windows.storage.dll: ShellExecuteExW()
#52 0x74704E00 in C:\WINDOWS\SYSTEM32\windows.storage.dll: Ordinal2009()
#53 0x74614375 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#54 0x5E5A34DA in C:\WINDOWS\system32\explorerframe.dll: Ordinal130()
#55 0x7453C088 in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#56 0x7453BCAC in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#57 0x7453BA6E in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#58 0x7652C6E9 in C:\WINDOWS\System32\shcore.dll: Ordinal245()
#59 0x770E9680 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlUnwind()
#60 0x770B602A in C:\WINDOWS\SYSTEM32\ntdll.dll: TpCallbackIndependent()
#61 0x7581FCC9 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Dec  4 2023 18:56:43, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Dec 04 2023 18:56:47

Run file:	D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe,

ВНЕЗАПНО: Исключение С++, вызванное оператором throw.

#1: Исключение EXCEPTION_CPP_MSC (0xE06D7363) при выполнении кода по адресу 0x7615F932 в функции RaiseException() в модуле C:\WINDOWS\System32\KERNELBASE.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

Ой, всё (EXCEPTION_NONCONTINUABLE).

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005092FC (32-bit), Flags: CMdRE0, Thread: 0x4378, GetLastError(): 127 (Не найдена указанная процедура). 

--------------------------------------------------
Стек вызовов:

# 0 0x7615F932 in C:\WINDOWS\System32\KERNELBASE.dll: RaiseException()
# 1 0x5CE1AE86 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 2 0x5CDC8F16 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 3 0x5CDC941E in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 4 0x5CD083FD in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 5 0x5CD05811 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 6 0x5CD9F93A in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 7 0x5CD9F012 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 8 0x5CD9DAB0 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 9 0x5CD09C13 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
#10 0x5CC7924C in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
#11 0x5CDC8B48 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
#12 0x5CDC8C0C in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
#13 0x770F2B66 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlIpv6AddressToStringA()
#14 0x770CDD72 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlActivateActivationContextUnsafeFast()
#15 0x770D1873 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
#16 0x770D19E1 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
#17 0x770D2285 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlIsCriticalSectionLockedByThread()
#18 0x770CE2A2 in C:\WINDOWS\SYSTEM32\ntdll.dll: LdrLoadDll()
#19 0x770CDEE6 in C:\WINDOWS\SYSTEM32\ntdll.dll: LdrLoadDll()
#20 0x7613A206 in C:\WINDOWS\System32\KERNELBASE.dll: LoadLibraryExW()
#21 0x769710D6 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#22 0x7697105F in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#23 0x76970E74 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#24 0x7696FD11 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#25 0x7698882E in C:\WINDOWS\System32\combase.dll: RoGetActivationFactory()
#26 0x76956892 in C:\WINDOWS\System32\combase.dll: CoGetClassObject()
#27 0x76954B85 in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#28 0x76962345 in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#29 0x7695447F in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#30 0x76953C7A in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#31 0x769D2CF5 in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#32 0x769D2BAD in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#33 0x769D2B31 in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#34 0x7696230D in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#35 0x76962B4D in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#36 0x76962314 in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#37 0x7698A5A2 in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#38 0x76989811 in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#39 0x7698957E in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#40 0x75AED4A0 in C:\WINDOWS\System32\SHELL32.dll: Ordinal866()
#41 0x75BB5523 in C:\WINDOWS\System32\SHELL32.dll: StateRepoNewMenuCache_EnsureCacheAsync()
#42 0x75B66C84 in C:\WINDOWS\System32\SHELL32.dll: Ordinal660()
#43 0x75B67277 in C:\WINDOWS\System32\SHELL32.dll: Ordinal660()
#44 0x75AD19C6 in C:\WINDOWS\System32\SHELL32.dll: SHCreateDefaultContextMenu()
#45 0x75AD26A6 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#46 0x75AD1ED5 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#47 0x75AD1DB2 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#48 0x75AD1B6F in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#49 0x74614510 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#50 0x74614421 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#51 0x749B28AE in C:\WINDOWS\SYSTEM32\windows.storage.dll: ShellExecuteExW()
#52 0x74704E00 in C:\WINDOWS\SYSTEM32\windows.storage.dll: Ordinal2009()
#53 0x74614375 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#54 0x5E5A34DA in C:\WINDOWS\system32\explorerframe.dll: Ordinal130()
#55 0x7453C088 in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#56 0x7453BCAC in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#57 0x7453BA6E in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#58 0x7652C6E9 in C:\WINDOWS\System32\shcore.dll: Ordinal245()
#59 0x770E9680 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlUnwind()
#60 0x770B602A in C:\WINDOWS\SYSTEM32\ntdll.dll: TpCallbackIndependent()
#61 0x7581FCC9 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Dec  4 2023 18:57:42, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Dec 04 2023 18:57:45

Run file:	D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe,

ВНЕЗАПНО: Исключение С++, вызванное оператором throw.

#1: Исключение EXCEPTION_CPP_MSC (0xE06D7363) при выполнении кода по адресу 0x7615F932 в функции RaiseException() в модуле C:\WINDOWS\System32\KERNELBASE.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

Ой, всё (EXCEPTION_NONCONTINUABLE).

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005092FC (32-bit), Flags: CMdRE0, Thread: 0x115C, GetLastError(): 127 (Не найдена указанная процедура). 

--------------------------------------------------
Стек вызовов:

# 0 0x7615F932 in C:\WINDOWS\System32\KERNELBASE.dll: RaiseException()
# 1 0x5CE1AE86 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 2 0x5CDC8F16 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 3 0x5CDC941E in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 4 0x5CD083FD in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 5 0x5CD05811 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 6 0x5CD9F93A in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 7 0x5CD9F012 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 8 0x5CD9DAB0 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 9 0x5CD09C13 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
#10 0x5CC7924C in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
#11 0x5CDC8B48 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
#12 0x5CDC8C0C in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
#13 0x770F2B66 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlIpv6AddressToStringA()
#14 0x770CDD72 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlActivateActivationContextUnsafeFast()
#15 0x770D1873 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
#16 0x770D19E1 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
#17 0x770D2285 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlIsCriticalSectionLockedByThread()
#18 0x770CE2A2 in C:\WINDOWS\SYSTEM32\ntdll.dll: LdrLoadDll()
#19 0x770CDEE6 in C:\WINDOWS\SYSTEM32\ntdll.dll: LdrLoadDll()
#20 0x7613A206 in C:\WINDOWS\System32\KERNELBASE.dll: LoadLibraryExW()
#21 0x769710D6 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#22 0x7697105F in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#23 0x76970E74 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#24 0x7696FD11 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#25 0x7698882E in C:\WINDOWS\System32\combase.dll: RoGetActivationFactory()
#26 0x76956892 in C:\WINDOWS\System32\combase.dll: CoGetClassObject()
#27 0x76954B85 in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#28 0x76962345 in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#29 0x7695447F in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#30 0x76953C7A in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#31 0x769D2CF5 in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#32 0x769D2BAD in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#33 0x769D2B31 in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#34 0x7696230D in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#35 0x76962B4D in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#36 0x76962314 in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#37 0x7698A5A2 in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#38 0x76989811 in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#39 0x7698957E in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#40 0x75AED4A0 in C:\WINDOWS\System32\SHELL32.dll: Ordinal866()
#41 0x75BB5523 in C:\WINDOWS\System32\SHELL32.dll: StateRepoNewMenuCache_EnsureCacheAsync()
#42 0x75B66C84 in C:\WINDOWS\System32\SHELL32.dll: Ordinal660()
#43 0x75B67277 in C:\WINDOWS\System32\SHELL32.dll: Ordinal660()
#44 0x75AD19C6 in C:\WINDOWS\System32\SHELL32.dll: SHCreateDefaultContextMenu()
#45 0x75AD26A6 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#46 0x75AD1ED5 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#47 0x75AD1DB2 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#48 0x75AD1B6F in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#49 0x74614510 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#50 0x74614421 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#51 0x749B28AE in C:\WINDOWS\SYSTEM32\windows.storage.dll: ShellExecuteExW()
#52 0x74704E00 in C:\WINDOWS\SYSTEM32\windows.storage.dll: Ordinal2009()
#53 0x74614375 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#54 0x5E5A34DA in C:\WINDOWS\system32\explorerframe.dll: Ordinal130()
#55 0x7453C088 in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#56 0x7453BCAC in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#57 0x7453BA6E in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#58 0x7652C6E9 in C:\WINDOWS\System32\shcore.dll: Ordinal245()
#59 0x770E9680 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlUnwind()
#60 0x770B602A in C:\WINDOWS\SYSTEM32\ntdll.dll: TpCallbackIndependent()
#61 0x7581FCC9 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Dec  4 2023 19:00:49, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Dec 04 2023 19:00:54

Run file:	D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe,

ВНЕЗАПНО: Исключение С++, вызванное оператором throw.

#1: Исключение EXCEPTION_CPP_MSC (0xE06D7363) при выполнении кода по адресу 0x7615F932 в функции RaiseException() в модуле C:\WINDOWS\System32\KERNELBASE.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

Ой, всё (EXCEPTION_NONCONTINUABLE).

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005092FC (32-bit), Flags: CMdRE0, Thread: 0x46E0, GetLastError(): 127 (Не найдена указанная процедура). 

--------------------------------------------------
Стек вызовов:

# 0 0x7615F932 in C:\WINDOWS\System32\KERNELBASE.dll: RaiseException()
# 1 0x5CB8AE86 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 2 0x5CB38F16 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 3 0x5CB3941E in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 4 0x5CA783FD in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 5 0x5CA75811 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 6 0x5CB0F93A in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 7 0x5CB0F012 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 8 0x5CB0DAB0 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 9 0x5CA79C13 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
#10 0x5C9E924C in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
#11 0x5CB38B48 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
#12 0x5CB38C0C in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
#13 0x770F2B66 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlIpv6AddressToStringA()
#14 0x770CDD72 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlActivateActivationContextUnsafeFast()
#15 0x770D1873 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
#16 0x770D19E1 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
#17 0x770D2285 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlIsCriticalSectionLockedByThread()
#18 0x770CE2A2 in C:\WINDOWS\SYSTEM32\ntdll.dll: LdrLoadDll()
#19 0x770CDEE6 in C:\WINDOWS\SYSTEM32\ntdll.dll: LdrLoadDll()
#20 0x7613A206 in C:\WINDOWS\System32\KERNELBASE.dll: LoadLibraryExW()
#21 0x769710D6 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#22 0x7697105F in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#23 0x76970E74 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#24 0x7696FD11 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#25 0x7698882E in C:\WINDOWS\System32\combase.dll: RoGetActivationFactory()
#26 0x76956892 in C:\WINDOWS\System32\combase.dll: CoGetClassObject()
#27 0x76954B85 in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#28 0x76962345 in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#29 0x7695447F in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#30 0x76953C7A in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#31 0x769D2CF5 in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#32 0x769D2BAD in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#33 0x769D2B31 in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#34 0x7696230D in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#35 0x76962B4D in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#36 0x76962314 in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#37 0x7698A5A2 in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#38 0x76989811 in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#39 0x7698957E in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#40 0x75AED4A0 in C:\WINDOWS\System32\SHELL32.dll: Ordinal866()
#41 0x75BB5523 in C:\WINDOWS\System32\SHELL32.dll: StateRepoNewMenuCache_EnsureCacheAsync()
#42 0x75B66C84 in C:\WINDOWS\System32\SHELL32.dll: Ordinal660()
#43 0x75B67277 in C:\WINDOWS\System32\SHELL32.dll: Ordinal660()
#44 0x75AD19C6 in C:\WINDOWS\System32\SHELL32.dll: SHCreateDefaultContextMenu()
#45 0x75AD26A6 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#46 0x75AD1ED5 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#47 0x75AD1DB2 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#48 0x75AD1B6F in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#49 0x74614510 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#50 0x74614421 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#51 0x749B28AE in C:\WINDOWS\SYSTEM32\windows.storage.dll: ShellExecuteExW()
#52 0x74704E00 in C:\WINDOWS\SYSTEM32\windows.storage.dll: Ordinal2009()
#53 0x74614375 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#54 0x5E5A34DA in C:\WINDOWS\system32\explorerframe.dll: Ordinal130()
#55 0x7453C088 in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#56 0x7453BCAC in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#57 0x7453BA6E in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#58 0x7652C6E9 in C:\WINDOWS\System32\shcore.dll: Ordinal245()
#59 0x770E9680 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlUnwind()
#60 0x770B602A in C:\WINDOWS\SYSTEM32\ntdll.dll: TpCallbackIndependent()
#61 0x7581FCC9 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Dec  4 2023 19:19:41, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Dec 04 2023 19:19:45

Run file:	D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe,

ВНЕЗАПНО: Исключение С++, вызванное оператором throw.

#1: Исключение EXCEPTION_CPP_MSC (0xE06D7363) при выполнении кода по адресу 0x7615F932 в функции RaiseException() в модуле C:\WINDOWS\System32\KERNELBASE.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

Ой, всё (EXCEPTION_NONCONTINUABLE).

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005092FC (32-bit), Flags: CMdRE0, Thread: 0x231C, GetLastError(): 127 (Не найдена указанная процедура). 

--------------------------------------------------
Стек вызовов:

# 0 0x7615F932 in C:\WINDOWS\System32\KERNELBASE.dll: RaiseException()
# 1 0x5CB8AE86 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 2 0x5CB38F16 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 3 0x5CB3941E in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 4 0x5CA783FD in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 5 0x5CA75811 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 6 0x5CB0F93A in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 7 0x5CB0F012 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 8 0x5CB0DAB0 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 9 0x5CA79C13 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
#10 0x5C9E924C in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
#11 0x5CB38B48 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
#12 0x5CB38C0C in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
#13 0x770F2B66 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlIpv6AddressToStringA()
#14 0x770CDD72 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlActivateActivationContextUnsafeFast()
#15 0x770D1873 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
#16 0x770D19E1 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
#17 0x770D2285 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlIsCriticalSectionLockedByThread()
#18 0x770CE2A2 in C:\WINDOWS\SYSTEM32\ntdll.dll: LdrLoadDll()
#19 0x770CDEE6 in C:\WINDOWS\SYSTEM32\ntdll.dll: LdrLoadDll()
#20 0x7613A206 in C:\WINDOWS\System32\KERNELBASE.dll: LoadLibraryExW()
#21 0x769710D6 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#22 0x7697105F in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#23 0x76970E74 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#24 0x7696FD11 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#25 0x7698882E in C:\WINDOWS\System32\combase.dll: RoGetActivationFactory()
#26 0x76956892 in C:\WINDOWS\System32\combase.dll: CoGetClassObject()
#27 0x76954B85 in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#28 0x76962345 in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#29 0x7695447F in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#30 0x76953C7A in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#31 0x769D2CF5 in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#32 0x769D2BAD in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#33 0x769D2B31 in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#34 0x7696230D in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#35 0x76962B4D in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#36 0x76962314 in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#37 0x7698A5A2 in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#38 0x76989811 in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#39 0x7698957E in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#40 0x75AED4A0 in C:\WINDOWS\System32\SHELL32.dll: Ordinal866()
#41 0x75BB5523 in C:\WINDOWS\System32\SHELL32.dll: StateRepoNewMenuCache_EnsureCacheAsync()
#42 0x75B66C84 in C:\WINDOWS\System32\SHELL32.dll: Ordinal660()
#43 0x75B67277 in C:\WINDOWS\System32\SHELL32.dll: Ordinal660()
#44 0x75AD19C6 in C:\WINDOWS\System32\SHELL32.dll: SHCreateDefaultContextMenu()
#45 0x75AD26A6 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#46 0x75AD1ED5 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#47 0x75AD1DB2 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#48 0x75AD1B6F in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#49 0x74614510 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#50 0x74614421 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#51 0x749B28AE in C:\WINDOWS\SYSTEM32\windows.storage.dll: ShellExecuteExW()
#52 0x74704E00 in C:\WINDOWS\SYSTEM32\windows.storage.dll: Ordinal2009()
#53 0x74614375 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#54 0x5E5A34DA in C:\WINDOWS\system32\explorerframe.dll: Ordinal130()
#55 0x7453C088 in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#56 0x7453BCAC in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#57 0x7453BA6E in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#58 0x7652C6E9 in C:\WINDOWS\System32\shcore.dll: Ordinal245()
#59 0x770E9680 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlUnwind()
#60 0x770B602A in C:\WINDOWS\SYSTEM32\ntdll.dll: TpCallbackIndependent()
#61 0x7581FCC9 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Dec  4 2023 19:20:59, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Dec 04 2023 19:21:04

Run file:	D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe,

ВНЕЗАПНО: Исключение С++, вызванное оператором throw.

#1: Исключение EXCEPTION_CPP_MSC (0xE06D7363) при выполнении кода по адресу 0x7615F932 в функции RaiseException() в модуле C:\WINDOWS\System32\KERNELBASE.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

Ой, всё (EXCEPTION_NONCONTINUABLE).

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005092FC (32-bit), Flags: CMdRE0, Thread: 0x2B24, GetLastError(): 127 (Не найдена указанная процедура). 

--------------------------------------------------
Стек вызовов:

# 0 0x7615F932 in C:\WINDOWS\System32\KERNELBASE.dll: RaiseException()
# 1 0x5CFEAE86 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 2 0x5CF98F16 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 3 0x5CF9941E in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 4 0x5CED83FD in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 5 0x5CED5811 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 6 0x5CF6F93A in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 7 0x5CF6F012 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 8 0x5CF6DAB0 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 9 0x5CED9C13 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
#10 0x5CE4924C in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
#11 0x5CF98B48 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
#12 0x5CF98C0C in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
#13 0x770F2B66 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlIpv6AddressToStringA()
#14 0x770CDD72 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlActivateActivationContextUnsafeFast()
#15 0x770D1873 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
#16 0x770D19E1 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
#17 0x770D2285 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlIsCriticalSectionLockedByThread()
#18 0x770CE2A2 in C:\WINDOWS\SYSTEM32\ntdll.dll: LdrLoadDll()
#19 0x770CDEE6 in C:\WINDOWS\SYSTEM32\ntdll.dll: LdrLoadDll()
#20 0x7613A206 in C:\WINDOWS\System32\KERNELBASE.dll: LoadLibraryExW()
#21 0x769710D6 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#22 0x7697105F in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#23 0x76970E74 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#24 0x7696FD11 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#25 0x7698882E in C:\WINDOWS\System32\combase.dll: RoGetActivationFactory()
#26 0x76956892 in C:\WINDOWS\System32\combase.dll: CoGetClassObject()
#27 0x76954B85 in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#28 0x76962345 in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#29 0x7695447F in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#30 0x76953C7A in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#31 0x769D2CF5 in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#32 0x769D2BAD in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#33 0x769D2B31 in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#34 0x7696230D in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#35 0x76962B4D in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#36 0x76962314 in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#37 0x7698A5A2 in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#38 0x76989811 in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#39 0x7698957E in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#40 0x75AED4A0 in C:\WINDOWS\System32\SHELL32.dll: Ordinal866()
#41 0x75BB5523 in C:\WINDOWS\System32\SHELL32.dll: StateRepoNewMenuCache_EnsureCacheAsync()
#42 0x75B66C84 in C:\WINDOWS\System32\SHELL32.dll: Ordinal660()
#43 0x75B67277 in C:\WINDOWS\System32\SHELL32.dll: Ordinal660()
#44 0x75AD19C6 in C:\WINDOWS\System32\SHELL32.dll: SHCreateDefaultContextMenu()
#45 0x75AD26A6 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#46 0x75AD1ED5 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#47 0x75AD1DB2 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#48 0x75AD1B6F in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#49 0x74614510 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#50 0x74614421 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#51 0x749B28AE in C:\WINDOWS\SYSTEM32\windows.storage.dll: ShellExecuteExW()
#52 0x74704E00 in C:\WINDOWS\SYSTEM32\windows.storage.dll: Ordinal2009()
#53 0x74614375 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#54 0x5E5A34DA in C:\WINDOWS\system32\explorerframe.dll: Ordinal130()
#55 0x7453C088 in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#56 0x7453BCAC in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#57 0x7453BA6E in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#58 0x7652C6E9 in C:\WINDOWS\System32\shcore.dll: Ordinal245()
#59 0x770E9680 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlUnwind()
#60 0x770B602A in C:\WINDOWS\SYSTEM32\ntdll.dll: TpCallbackIndependent()
#61 0x7581FCC9 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Dec  4 2023 19:30:20, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Dec 04 2023 19:30:24

Run file:	D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe,

ВНЕЗАПНО: Исключение С++, вызванное оператором throw.

#1: Исключение EXCEPTION_CPP_MSC (0xE06D7363) при выполнении кода по адресу 0x7615F932 в функции RaiseException() в модуле C:\WINDOWS\System32\KERNELBASE.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

Ой, всё (EXCEPTION_NONCONTINUABLE).

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005092FC (32-bit), Flags: CMdRE0, Thread: 0x3FBC, GetLastError(): 127 (Не найдена указанная процедура). 

--------------------------------------------------
Стек вызовов:

# 0 0x7615F932 in C:\WINDOWS\System32\KERNELBASE.dll: RaiseException()
# 1 0x6288AE86 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 2 0x62838F16 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 3 0x6283941E in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 4 0x627783FD in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 5 0x62775811 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 6 0x6280F93A in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 7 0x6280F012 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 8 0x6280DAB0 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 9 0x62779C13 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
#10 0x626E924C in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
#11 0x62838B48 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
#12 0x62838C0C in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
#13 0x770F2B66 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlIpv6AddressToStringA()
#14 0x770CDD72 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlActivateActivationContextUnsafeFast()
#15 0x770D1873 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
#16 0x770D19E1 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
#17 0x770D2285 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlIsCriticalSectionLockedByThread()
#18 0x770CE2A2 in C:\WINDOWS\SYSTEM32\ntdll.dll: LdrLoadDll()
#19 0x770CDEE6 in C:\WINDOWS\SYSTEM32\ntdll.dll: LdrLoadDll()
#20 0x7613A206 in C:\WINDOWS\System32\KERNELBASE.dll: LoadLibraryExW()
#21 0x769710D6 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#22 0x7697105F in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#23 0x76970E74 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#24 0x7696FD11 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#25 0x7698882E in C:\WINDOWS\System32\combase.dll: RoGetActivationFactory()
#26 0x76956892 in C:\WINDOWS\System32\combase.dll: CoGetClassObject()
#27 0x76954B85 in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#28 0x76962345 in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#29 0x7695447F in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#30 0x76953C7A in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#31 0x769D2CF5 in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#32 0x769D2BAD in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#33 0x769D2B31 in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#34 0x7696230D in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#35 0x76962B4D in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#36 0x76962314 in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#37 0x7698A5A2 in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#38 0x76989811 in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#39 0x7698957E in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#40 0x75AED4A0 in C:\WINDOWS\System32\SHELL32.dll: Ordinal866()
#41 0x75BB5523 in C:\WINDOWS\System32\SHELL32.dll: StateRepoNewMenuCache_EnsureCacheAsync()
#42 0x75B66C84 in C:\WINDOWS\System32\SHELL32.dll: Ordinal660()
#43 0x75B67277 in C:\WINDOWS\System32\SHELL32.dll: Ordinal660()
#44 0x75AD19C6 in C:\WINDOWS\System32\SHELL32.dll: SHCreateDefaultContextMenu()
#45 0x75AD26A6 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#46 0x75AD1ED5 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#47 0x75AD1DB2 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#48 0x75AD1B6F in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#49 0x74614510 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#50 0x74614421 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#51 0x749B28AE in C:\WINDOWS\SYSTEM32\windows.storage.dll: ShellExecuteExW()
#52 0x74704E00 in C:\WINDOWS\SYSTEM32\windows.storage.dll: Ordinal2009()
#53 0x74614375 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#54 0x632E34DA in C:\WINDOWS\system32\explorerframe.dll: Ordinal130()
#55 0x7453C088 in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#56 0x7453BCAC in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#57 0x7453BA6E in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#58 0x7652C6E9 in C:\WINDOWS\System32\shcore.dll: Ordinal245()
#59 0x770E9680 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlUnwind()
#60 0x770B602A in C:\WINDOWS\SYSTEM32\ntdll.dll: TpCallbackIndependent()
#61 0x7581FCC9 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Dec  5 2023 09:47:37, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Dec 05 2023 09:47:42

Run file:	D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe,

ВНЕЗАПНО: Исключение С++, вызванное оператором throw.

#1: Исключение EXCEPTION_CPP_MSC (0xE06D7363) при выполнении кода по адресу 0x7615F932 в функции RaiseException() в модуле C:\WINDOWS\System32\KERNELBASE.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

Ой, всё (EXCEPTION_NONCONTINUABLE).

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x005092FC (32-bit), Flags: CMdRE0, Thread: 0x11B4, GetLastError(): 127 (Не найдена указанная процедура). 

--------------------------------------------------
Стек вызовов:

# 0 0x7615F932 in C:\WINDOWS\System32\KERNELBASE.dll: RaiseException()
# 1 0x6258AE86 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 2 0x62538F16 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 3 0x6253941E in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 4 0x624783FD in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 5 0x62475811 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 6 0x6250F93A in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 7 0x6250F012 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 8 0x6250DAB0 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 9 0x62479C13 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
#10 0x623E924C in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
#11 0x62538B48 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
#12 0x62538C0C in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
#13 0x770F2B66 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlIpv6AddressToStringA()
#14 0x770CDD72 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlActivateActivationContextUnsafeFast()
#15 0x770D1873 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
#16 0x770D19E1 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
#17 0x770D2285 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlIsCriticalSectionLockedByThread()
#18 0x770CE2A2 in C:\WINDOWS\SYSTEM32\ntdll.dll: LdrLoadDll()
#19 0x770CDEE6 in C:\WINDOWS\SYSTEM32\ntdll.dll: LdrLoadDll()
#20 0x7613A206 in C:\WINDOWS\System32\KERNELBASE.dll: LoadLibraryExW()
#21 0x769710D6 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#22 0x7697105F in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#23 0x76970E74 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#24 0x7696FD11 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#25 0x7698882E in C:\WINDOWS\System32\combase.dll: RoGetActivationFactory()
#26 0x76956892 in C:\WINDOWS\System32\combase.dll: CoGetClassObject()
#27 0x76954B85 in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#28 0x76962345 in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#29 0x7695447F in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#30 0x76953C7A in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#31 0x769D2CF5 in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#32 0x769D2BAD in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#33 0x769D2B31 in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#34 0x7696230D in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#35 0x76962B4D in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#36 0x76962314 in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#37 0x7698A5A2 in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#38 0x76989811 in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#39 0x7698957E in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#40 0x75AED4A0 in C:\WINDOWS\System32\SHELL32.dll: Ordinal866()
#41 0x75BB5523 in C:\WINDOWS\System32\SHELL32.dll: StateRepoNewMenuCache_EnsureCacheAsync()
#42 0x75B66C84 in C:\WINDOWS\System32\SHELL32.dll: Ordinal660()
#43 0x75B67277 in C:\WINDOWS\System32\SHELL32.dll: Ordinal660()
#44 0x75AD19C6 in C:\WINDOWS\System32\SHELL32.dll: SHCreateDefaultContextMenu()
#45 0x75AD26A6 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#46 0x75AD1ED5 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#47 0x75AD1DB2 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#48 0x75AD1B6F in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#49 0x74614510 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#50 0x74614421 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#51 0x749B28AE in C:\WINDOWS\SYSTEM32\windows.storage.dll: ShellExecuteExW()
#52 0x74704E00 in C:\WINDOWS\SYSTEM32\windows.storage.dll: Ordinal2009()
#53 0x74614375 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#54 0x632E34DA in C:\WINDOWS\system32\explorerframe.dll: Ordinal130()
#55 0x7453C088 in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#56 0x7453BCAC in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#57 0x7453BA6E in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#58 0x7652C6E9 in C:\WINDOWS\System32\shcore.dll: Ordinal245()
#59 0x770E9680 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlUnwind()
#60 0x770B602A in C:\WINDOWS\SYSTEM32\ntdll.dll: TpCallbackIndependent()
#61 0x7581FCC9 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Dec  5 2023 09:47:57, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Dec 05 2023 09:48:02

Run file:	D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe,

ВНЕЗАПНО: Исключение С++, вызванное оператором throw.

#1: Исключение EXCEPTION_CPP_MSC (0xE06D7363) при выполнении кода по адресу 0x7605F932 в функции RaiseException() в модуле C:\WINDOWS\System32\KERNELBASE.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

Ой, всё (EXCEPTION_NONCONTINUABLE).

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x0050A2FC (32-bit), Flags: CMdRE0, Thread: 0x40C8, GetLastError(): 127 (Не найдена указанная процедура). 

--------------------------------------------------
Стек вызовов:

# 0 0x7605F932 in C:\WINDOWS\System32\KERNELBASE.dll: RaiseException()
# 1 0x59B3AE86 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 2 0x59AE8F16 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 3 0x59AE941E in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
# 4 0x59A283FD in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 5 0x59A25811 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 6 0x59ABF93A in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 7 0x59ABF012 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 8 0x59ABDAB0 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
# 9 0x59A29C13 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
#10 0x5999924C in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: DllCanUnloadNow()
#11 0x59AE8B48 in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
#12 0x59AE8C0C in C:\Program Files\AVAST Software\Avast\x86\ashShell.dll: on_avast_dll_unload()
#13 0x77402B66 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlIpv6AddressToStringA()
#14 0x773DDD72 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlActivateActivationContextUnsafeFast()
#15 0x773E1873 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
#16 0x773E19E1 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlEqualUnicodeString()
#17 0x773E2285 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlIsCriticalSectionLockedByThread()
#18 0x773DE2A2 in C:\WINDOWS\SYSTEM32\ntdll.dll: LdrLoadDll()
#19 0x773DDEE6 in C:\WINDOWS\SYSTEM32\ntdll.dll: LdrLoadDll()
#20 0x7603A206 in C:\WINDOWS\System32\KERNELBASE.dll: LoadLibraryExW()
#21 0x764C10D6 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#22 0x764C105F in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#23 0x764C0E74 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#24 0x764BFD11 in C:\WINDOWS\System32\combase.dll: WindowsCreateString()
#25 0x764D882E in C:\WINDOWS\System32\combase.dll: RoGetActivationFactory()
#26 0x764A6892 in C:\WINDOWS\System32\combase.dll: CoGetClassObject()
#27 0x764A4B85 in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#28 0x764B2345 in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#29 0x764A447F in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#30 0x764A3C7A in C:\WINDOWS\System32\combase.dll: CoCreateGuid()
#31 0x76522CF5 in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#32 0x76522BAD in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#33 0x76522B31 in C:\WINDOWS\System32\combase.dll: HSTRING_UserFree()
#34 0x764B230D in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#35 0x764B2B4D in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#36 0x764B2314 in C:\WINDOWS\System32\combase.dll: CoGetTreatAsClass()
#37 0x764DA5A2 in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#38 0x764D9811 in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#39 0x764D957E in C:\WINDOWS\System32\combase.dll: CoCreateInstance()
#40 0x755BD4A0 in C:\WINDOWS\System32\SHELL32.dll: Ordinal866()
#41 0x75685523 in C:\WINDOWS\System32\SHELL32.dll: StateRepoNewMenuCache_EnsureCacheAsync()
#42 0x75636C84 in C:\WINDOWS\System32\SHELL32.dll: Ordinal660()
#43 0x75637277 in C:\WINDOWS\System32\SHELL32.dll: Ordinal660()
#44 0x755A19C6 in C:\WINDOWS\System32\SHELL32.dll: SHCreateDefaultContextMenu()
#45 0x755A26A6 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#46 0x755A1ED5 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#47 0x755A1DB2 in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#48 0x755A1B6F in C:\WINDOWS\System32\SHELL32.dll: SHELL32_IconOverlayManagerInit()
#49 0x748C4510 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#50 0x748C4421 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#51 0x74C628AE in C:\WINDOWS\SYSTEM32\windows.storage.dll: ShellExecuteExW()
#52 0x749B4E00 in C:\WINDOWS\SYSTEM32\windows.storage.dll: Ordinal2009()
#53 0x748C4375 in C:\WINDOWS\SYSTEM32\windows.storage.dll: SHGetFolderLocation()
#54 0x66EE34DA in C:\WINDOWS\system32\explorerframe.dll: Ordinal130()
#55 0x747EC088 in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#56 0x747EBCAC in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#57 0x747EBA6E in C:\WINDOWS\SYSTEM32\windows.storage.dll: CCachedShellItem_CreateInstance()
#58 0x76EDC6E9 in C:\WINDOWS\System32\shcore.dll: Ordinal245()
#59 0x773F9680 in C:\WINDOWS\SYSTEM32\ntdll.dll: RtlUnwind()
#60 0x773C602A in C:\WINDOWS\SYSTEM32\ntdll.dll: TpCallbackIndependent()
#61 0x76D8FCC9 in C:\WINDOWS\System32\KERNEL32.dll: BaseThreadInitThunk()

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\program\codeblocks\mingw\include\txlib.h
Compiled:	Dec 11 2023 17:07:44, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Dec 11 2023 17:07:50

Run file:	D:\проекты и другое\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\проекты и другое\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x0045427C в функции _M_is_leaked() в файле d:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h на строке 45. Попытка прочесть данные по адресу 0x0000000C в модуле D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x0050A2FC (32-bit), Flags: CMdRE0, Thread: 0x3388 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0045427C in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: _M_is_leaked() at d:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 1 0x0048318B in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: swap() at d:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 2 0x0048A489 in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: operator=() at d:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 3 0x0044E9ED in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: operator=() at d:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 4 0x0042E798 in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: main() at D:/пономарёв александр/clashofrepository-main/main.cpp (510):

    508:                                                     menuPic[i].h,
    509:                                                     true,
=>  510:                                                     menuPic[i].category};
    511: 
    512:                             nCentrPic ++;

--------------------------------------------------
Стек вызовов TX:

# 0 in int main() at D:\пономарёв александр\clashofrepository-main\main.cpp (496):

    494:                      char str[100];
    495:                     sprintf(str, "x  = %d", x);
=>  496:                     txTextOut(50, 650, str);
    497: 
    498:                     for(int i=0; i<count_pic; i++)

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\codeblocks\mingw\include\txlib.h
Compiled:	Dec 11 2023 20:42:46, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Dec 11 2023 20:43:08

Run file:	D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\пономарёв александр\clashofrepository-main

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x0045427C в функции _M_is_leaked() в файле d:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h на строке 45. Попытка прочесть данные по адресу 0x0000000C в модуле D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x0050A2FC (32-bit), Flags: CMdRE0, Thread: 0x3388 (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0045427C in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: _M_is_leaked() at d:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 1 0x0048318B in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: swap() at d:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 2 0x0048A489 in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: operator=() at d:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 3 0x0044E9ED in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: operator=() at d:/codeblocks/mingw/include/c++/4.8.1/debug/functions.h (45):

     43:   // An arbitrary iterator pointer is not singular.
     44:   inline bool
=>   45:   __check_singular_aux(const void*) { return false; }
     46: 
     47:   // We may have an iterator that derives from _Safe_iterator_base but isn't

# 4 0x0042E798 in D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe: main() at D:/пономарёв александр/clashofrepository-main/main.cpp (510):

    508:                                                     menuPic[i].h,
    509:                                                     true,
=>  510:                                                     menuPic[i].category};
    511: 
    512:                             nCentrPic ++;

--------------------------------------------------
Стек вызовов TX:

# 0 in int main() at D:\пономарёв александр\clashofrepository-main\main.cpp (496):

    494:                      char str[100];
    495:                     sprintf(str, "x  = %d", x);
=>  496:                     txTextOut(50, 650, str);
    497: 
    498:                     for(int i=0; i<count_pic; i++)

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	d:\codeblocks\mingw\include\txlib.h
Compiled:	Dec 11 2023 20:42:46, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Dec 11 2023 20:43:08

Run file:	D:\пономарёв александр\clashofrepository-main\bin\Debug\clash.exe
Directory:	D:\пономарёв александр\clashofrepository-main

--------------------------------------------------
